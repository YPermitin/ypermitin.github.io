(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4682],{3794:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/SQLServer/2019-09/script-collection",function(){return s(6179)}])},6179:function(e,n,s){"use strict";s.r(n);var a=s(5893),t=s(9305);s(7294);var d=s(6671);n.default=()=>(0,a.jsxs)(t.Xg,{blogcentered:!0,children:[(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"С чего все начинается"}),(0,a.jsxs)(t.xv,{p:!0,children:[(0,a.jsx)("b",{children:(0,a.jsx)("u",{children:(0,a.jsx)(t.e9,{newTab:!0,href:"/pages/blog/DevOps/2019-05/monitoring-with-extended-events-and-other.tsx",children:"В одной из прошлых статей"})})})," мы рассматривали вопросы мониторинга SQL Server в контексте работы с платформой 1С. И это правильно, ведь мониторинг СУБД является залогом стабильной работы информационной системы и всей компании."]}),(0,a.jsx)(t.xv,{p:!0,children:"Но что, если Вы как консультант / эксперт только пришли к новому клиенту / на новое место работы. Мониторинга там нет, но нужно понять, разобраться что там вообще происходит. Разобраться что за сервер вообще установлен, делаются ли бэкапы, какие базы развернуты, все ли в порядке с обслуживанием и так далее."}),(0,a.jsx)(t.xv,{p:!0,children:"Сегодня мы рассмотрим подобные вопросы. Начнем знакомство с сервером с помощью простых запросов, а остановимся на примерах поинтереснее."}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Скриптов достаточно?"}),(0,a.jsx)(t.xv,{p:!0,children:"Думаете, что все возникающие вопросы с СУБД можно решить скриптами? Многие вопросы, но точно не все!"}),(0,a.jsx)(t.xv,{p:!0,children:"Например, полноценный мониторинг сервера и сбор счетчиков производительности средствами СУБД точно не реализовать, ведь данные нужно не просто собирать, но и обрабатывать, компоновать, визуализировать и, в конечном, счете как-то интерпретировать."}),(0,a.jsx)(t.xv,{p:!0,children:"Конечно, SQL Server может решить все перечисленные задачи, ведь даже счетчики производительности операционной системы с его помощью можно собирать! Но это не всегда возможно, ведь тогда надо держать его установленным на всех серверах, даже которые к СУБД не относятся. А про сопровождение такого решения я вообще молчу."}),(0,a.jsx)(t.xv,{p:!0,children:"Поэтому сделаю важное уточнение - с помощью предлагаемого набора скриптов решить все задачи с настройкой и мониторингом СУБД невозможно! А вот получить первое представление о ее состоянии, и поверхностную информацию о проблемах - самое то!"}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Ближе к делу"}),(0,a.jsx)(t.xv,{p:!0,children:"Меньше слов - больше T-SQL скриптов!"}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Знакомимся с сервером"}),(0,a.jsx)(t.xv,{p:!0,children:"На первом этапе всегда было бы полезно узнать следующую информацию."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Базовая информация о сервере"}),(0,a.jsx)(t.xv,{p:!0,children:"Начнем с основной информации."}),(0,a.jsx)(d.Z,{code:"\n-- Имена сервера и экземпляра \nSelect @@SERVERNAME as [Server\\Instance]; \n\n-- версия SQL Server \nSelect @@VERSION as SQLServerVersion; \n\n-- экземпляр SQL Server \nSelect @@ServiceName AS ServiceInstance;\n\n -- Текущая БД (БД, в контексте которой выполняется запрос)\nSelect DB_NAME() AS CurrentDB_Name;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Теперь мы знаем какая версия SQL Server используется, имя экземпляра и сервера."}),(0,a.jsxs)(t.xv,{p:!0,children:["Хотя есть подозрение, что имя экземпляра Вы знали еще до подключения к нему ",":)"]}),(0,a.jsx)(t.xv,{p:!0,children:"Версия СУБД может пригодиться для определения какие возможности у нее есть, известные баги и др."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Время работы с момента запуска"}),(0,a.jsx)(t.xv,{p:!0,children:"В большинстве вопросов диагностики производительности и стабильности важно знать сколько времени уже запущен экземпляр SQL Server."}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@Servername AS ServerName ,\n        create_date AS  ServerStarted ,\n        DATEDIFF(s, create_date, GETDATE()) / 86400.0 AS DaysRunning ,\n        DATEDIFF(s, create_date, GETDATE()) AS SecondsRunnig\nFROM    sys.databases\nWHERE   name = 'tempdb'; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Здесь мы получили имя сервера, дату его запуска, а также продолжительность работы сервера в днях и секундах. Для этого мы использовали дату создания базы TempDB, которая создается в момент запуска SQL Server."}),(0,a.jsx)(t.xv,{p:!0,children:"Почему эта информация так важна? Сам SQL Server собирает статистику различных показателей (как используются индексы, информацию о недостающих индексах, планы запросов и др.). Чем дольше сервер работает, тем точнее собранная статистика."}),(0,a.jsx)(t.xv,{p:!0,children:"Представьте, что Вы запустили сервер 5 минут назад, смотрите что информации о недостающих индексов нет. Правильно ли было полагаться на эти данные, которые были собраны за 5 минут?"}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Количество активных соединений"}),(0,a.jsx)(t.xv,{p:!0,children:"Еще одним очень важным моментом может быть количество активных соединений со SQL Server."}),(0,a.jsx)(d.Z,{code:"\n-- Похожая информация, может быть получена с помощью sp_who \n\nSELECT  @@Servername AS Server ,\n        DB_NAME(database_id) AS DatabaseName ,\n        COUNT(database_id) AS Connections ,\n        Login_name AS  LoginName ,\n        MIN(Login_Time) AS Login_Time ,\n        MIN(COALESCE(last_request_end_time, last_request_start_time))\n                                                         AS  Last_Batch\nFROM    sys.dm_exec_sessions\nWHERE   database_id > 0\n        AND DB_NAME(database_id) NOT IN ( 'master', 'msdb' )\nGROUP BY database_id ,\n         login_name\nORDER BY DatabaseName;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Эта информация может пригодиться в следующих случаях:"}),(0,a.jsxs)(t.aV,{children:[(0,a.jsx)("li",{children:"Отслеживание количества соединений для контроля лицензионной “чистоты”."}),(0,a.jsx)("li",{children:"Для контроля подключения к базе данных."}),(0,a.jsx)("li",{children:"Для сбора статистики интенсивности работы с СУБД."}),(0,a.jsx)("li",{children:"Расследование проблем “зависших” соединений."}),(0,a.jsx)("li",{children:"И др."})]}),(0,a.jsx)(t.xv,{p:!0,children:"Все просто, не так ли?"}),(0,a.jsx)(t.xv,{p:!0,children:"После этого мы можем двигаться дальше."}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Псс, бэкапы есть?"}),(0,a.jsx)(t.xv,{p:!0,children:"Второй вопрос - что там у Вас с резервным копированием."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Информация о бэкапах"}),(0,a.jsx)(t.xv,{p:!0,children:"Резервное копирование - очень важно. Об этом уже так много было сказано, но случаев когда им пренебрегают до сих пор очень много. Узнаем дату последнего бэкапа тех баз, которые расположены на изучаемом сервере."}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@Servername AS ServerName ,\n        d.Name AS DBName ,\n        MAX(b.backup_finish_date) AS LastBackupCompleted\nFROM    sys.databases d\n        LEFT OUTER JOIN msdb..backupset b\n                    ON b.database_name = d.name\n                       AND b.[type] = 'D'\nGROUP BY d.Name\nORDER BY d.Name;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Кроме этого, мы можем узнать куда последние бэкапы сохранялись (будь то какой-либо каталог или виртуальное устройство для сохранения на ленту, или что-то другое)."}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@Servername AS ServerName ,\n        d.Name AS DBName ,\n        b.Backup_finish_date ,\n        bmf.Physical_Device_name\nFROM    sys.databases d\n        INNER JOIN msdb..backupset b ON b.database_name = d.name\n                                        AND b.[type] = 'D'\n        INNER JOIN msdb.dbo.backupmediafamily bmf ON b.media_set_id = bmf.media_set_id\nORDER BY d.NAME ,\n        b.Backup_finish_date DESC; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Теперь мы знаем есть ли настроенное резервное копирование. Ну или хотя бы ручной запуск бэкапирования."}),(0,a.jsx)(t.xv,{p:!0,children:"Резервное бэкапирование не настроено? Тогда пора заняться этим как можно скорее."}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Груз баз данных"}),(0,a.jsxs)(t.xv,{p:!0,children:["Базы бывают разные: маленькие, средние, большие, а также неизвестного размера ",":)"," Последняя категория - самая страшная, ведь неизвестность не принесет ничего хорошего. Давайте же узнаем с чем мы имеем дело."]}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Список баз"}),(0,a.jsx)(t.xv,{p:!0,children:"Для начала узнаем список всех баз на сервере. Для этого есть несколько способов."}),(0,a.jsx)(d.Z,{code:"\nEXEC sp_helpdb; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"или"}),(0,a.jsx)(d.Z,{code:"\nEXEC sp_Databases; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"или"}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@SERVERNAME AS Server ,\n        name AS DBName ,\n        recovery_model_Desc AS RecoveryModel ,\n        Compatibility_level AS CompatiblityLevel ,\n        create_date ,\n        state_desc\nFROM    sys.databases\nORDER BY Name; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"или"}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@SERVERNAME AS Server ,\n        d.name AS DBName ,\n        create_date ,\n        compatibility_level ,\n        m.physical_name AS FileName\nFROM    sys.databases d\n        JOIN sys.master_files m ON d.database_id = m.database_id\nWHERE   m.[type] = 0 -- data files only\nORDER BY d.name; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Все способы дают примерно ту же самую информацию, но с разной детализацией."}),(0,a.jsx)(t.xv,{p:!0,children:"Сам по себе список баз даст мало полезного. Давайте посмотрим что там с их размером."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Размер баз"}),(0,a.jsx)(t.xv,{p:!0,children:"Размер базы в мегабайтах."}),(0,a.jsx)(d.Z,{code:"\nwith fs\nas\n(\n    select database_id, type, size * 8.0 / 1024 size\n    from sys.master_files\n)\nselect \n    name,\n    (select sum(size) from fs where type = 0 and fs.database_id = db.database_id) DataFileSizeMB,\n    (select sum(size) from fs where type = 1 and fs.database_id = db.database_id) LogFileSizeMB\nfrom sys.databases db\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"После того, как стало известно о размере баз данных, можно посмотреть сколько место фактически используется."}),(0,a.jsx)(d.Z,{code:"\nSELECT SUM(unallocated_extent_page_count) AS [free pages],\n    (SUM(unallocated_extent_page_count)*1.0/128) AS [free space in MB]\nFROM sys.dm_db_file_space_usage;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Если доля неиспользованного места в базе высокая, то это может стать поводом для проведения шринка файлов данных базы. Но совсем не обязательно!"}),(0,a.jsx)(t.xv,{p:!0,children:"Еще может возникнуть вопрос где же эти базы хранятся."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Расположение файлов баз данных"}),(0,a.jsx)(t.xv,{p:!0,children:"Расположение файлов также можно определить несколькими способами. Вот два из них."}),(0,a.jsx)(d.Z,{code:"\nEXEC sp_Helpfile; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"или"}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@Servername AS Server ,\n        DB_NAME() AS DB_Name ,\n        File_id ,\n        Type_desc ,\n        Name ,\n        LEFT(Physical_Name, 1) AS Drive ,\n        Physical_Name ,\n        RIGHT(physical_name, 3) AS Ext ,\n        Size ,\n        Growth\nFROM    sys.database_files\nORDER BY File_id; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Может пригодиться, если планируется изменять конфигурацию хранилища данных и по другим админским вопросам."}),(0,a.jsx)(t.xv,{p:!0,children:"Но что скрывается за этими общими цифрами?"}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Размеры таблиц"}),(0,a.jsx)(t.xv,{p:!0,children:"Размер таблиц можно оценивать по количеству записей (это, конечно, менее точный способ, т.к. не учитывает сами данные) или непосредственно по занимаемому ими месту."}),(0,a.jsx)(t.xv,{p:!0,children:"Самый простой способ определения количества записей - через обычное сканирование таблиц. Этот же способ наименее оптимальный с точки зрения производительности."}),(0,a.jsx)(d.Z,{code:"\nSELECT  'Select ''' + DB_NAME() + '.' + SCHEMA_NAME(SCHEMA_ID) + '.'\n        + LEFT(o.name, 128) + ''' as DBName, count(*) as Count From ' + SCHEMA_NAME(SCHEMA_ID) + '.' + o.name\n        + ';' AS ' Script generator to get counts for all tables'\nFROM    sys.objects o\nWHERE   o.[type] = 'U'\nORDER BY o.name;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Наиболее оптимальный путь - это использование кластерного индекса."}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@ServerName AS Server ,\n        DB_NAME() AS DBName ,\n        OBJECT_SCHEMA_NAME(p.object_id) AS SchemaName ,\n        OBJECT_NAME(p.object_id) AS TableName ,\n        i.Type_Desc ,\n        i.Name AS IndexUsedForCounts ,\n        SUM(p.Rows) AS Rows\nFROM    sys.partitions p\n        JOIN sys.indexes i ON i.object_id = p.object_id\n                              AND i.index_id = p.index_id\nWHERE   i.type_desc IN ( 'CLUSTERED', 'HEAP' )\n                             -- This is key (1 index per table) \n        AND OBJECT_SCHEMA_NAME(p.object_id) <> 'sys'\nGROUP BY p.object_id ,\n        i.type_desc ,\n        i.Name\nORDER BY SchemaName ,\n        TableName; \n                ",className:"my-5",language:"sql"}),(0,a.jsxs)(t.xv,{p:!0,children:["Другой похожий метод - это использование DMV ",(0,a.jsx)("b",{children:(0,a.jsx)("u",{children:(0,a.jsx)(t.e9,{newTab:!0,href:"https://learn.microsoft.com/ru-ru/sql/relational-databases/system-dynamic-management-views/sys-dm-db-partition-stats-transact-sql?view=sql-server-ver16",children:"“dm_db_partition_stats”"})})}),"."]}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@ServerName AS ServerName ,\n        DB_NAME() AS DBName ,\n        OBJECT_SCHEMA_NAME(ddps.object_id) AS SchemaName ,\n        OBJECT_NAME(ddps.object_id) AS TableName ,\n        i.Type_Desc ,\n        i.Name AS IndexUsedForCounts ,\n        SUM(ddps.row_count) AS Rows\nFROM    sys.dm_db_partition_stats ddps\n        JOIN sys.indexes i ON i.object_id = ddps.object_id\n                              AND i.index_id = ddps.index_id\nWHERE   i.type_desc IN ( 'CLUSTERED', 'HEAP' )\n                              -- This is key (1 index per table) \n        AND OBJECT_SCHEMA_NAME(ddps.object_id) <> 'sys'\nGROUP BY ddps.object_id ,\n        i.type_desc ,\n        i.Name\nORDER BY SchemaName ,\n        TableName;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Первый способ доступен и из синтаксиса запросов платформы 1С."}),(0,a.jsx)(d.Z,{code:"\nВЫБРАТЬ\n    КОЛИЧЕСТВО(*) КоличествоЗаписей\nИЗ <ИмяТаблицы>\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Остальные - только с помощью T-SQL."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Размер таблиц"}),(0,a.jsx)(t.xv,{p:!0,children:"Количество записей - это хорошо. Но узнать размер хранимых данных в таблицах чаще всего более предпочтительный вариант."}),(0,a.jsx)(d.Z,{code:"\nSELECT\n	a3.name AS [schemaname],\n	a2.name AS [tablename],\n	a1.rows as row_count,\n	(a1.reserved + ISNULL(a4.reserved,0))* 8 AS [reserved], \n	a1.data * 8 AS [data],\n	(CASE WHEN (a1.used + ISNULL(a4.used,0)) > a1.data THEN (a1.used + ISNULL(a4.used,0)) - a1.data ELSE 0 END) * 8 AS [index_size],\n	(CASE WHEN (a1.reserved + ISNULL(a4.reserved,0)) > a1.used THEN (a1.reserved + ISNULL(a4.reserved,0)) - a1.used ELSE 0 END) * 8 AS [unused]\nFROM\n	(SELECT \n		ps.object_id,\n		SUM (\n			CASE\n				WHEN (ps.index_id < 2) THEN row_count\n				ELSE 0\n			END\n			) AS [rows],\n		SUM (ps.reserved_page_count) AS reserved,\n		SUM (\n			CASE\n				WHEN (ps.index_id < 2) THEN (ps.in_row_data_page_count + ps.lob_used_page_count + ps.row_overflow_used_page_count)\n				ELSE (ps.lob_used_page_count + ps.row_overflow_used_page_count)\n			END\n			) AS data,\n		SUM (ps.used_page_count) AS used\n	FROM sys.dm_db_partition_stats ps\n	GROUP BY ps.object_id) AS a1\nLEFT OUTER JOIN \n	(SELECT \n		it.parent_id,\n		SUM(ps.reserved_page_count) AS reserved,\n		SUM(ps.used_page_count) AS used\n	 FROM sys.dm_db_partition_stats ps\n	 INNER JOIN sys.internal_tables it ON (it.object_id = ps.object_id)\n	 WHERE it.internal_type IN (202,204)\n	 GROUP BY it.parent_id) AS a4 ON (a4.parent_id = a1.object_id)\nINNER JOIN sys.all_objects a2  ON ( a1.object_id = a2.object_id ) \nINNER JOIN sys.schemas a3 ON (a2.schema_id = a3.schema_id)\nWHERE a2.type <> N'S' and a2.type <> N'IT'\nORDER BY reserved DESC\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Скрипт дает информацию о размере зарезервированного места, размере данных и индексов, а также сколько свободного места из зарезервированного осталось доступно. Количество записей также доступно и подсчитывается с помощью DMV “dm_db_partition_stats”."}),(0,a.jsx)(t.xv,{p:!0,children:"Теперь мы знаем кто и как занимает место в исследуемых базах данных."}),(0,a.jsx)(t.xv,{p:!0,children:"Отлично, теперь мы уже имеем представление о сервере, резервном копировании и базах данных, которые здесь находятся. Можно перейти к вопросам эффективности работы СУБД."}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Что там с индексами"}),(0,a.jsx)(t.xv,{p:!0,children:"Состояние индексов и их правильное построение в базе - залог эффективной работы запросов и приемлемого быстродействия. Проведем исследование индексов в базах данных."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Список индексов"}),(0,a.jsx)(t.xv,{p:!0,children:"Составим список таблиц и их индексов."}),(0,a.jsx)(d.Z,{code:"\nSELECT  @@Servername AS ServerName ,\n        DB_NAME() AS DB_Name ,\n        o.Name AS TableName ,\n        i.Name AS IndexName\nFROM    sys.objects o\n        INNER JOIN sys.indexes i ON o.object_id = i.object_id\nWHERE   o.Type = 'U' -- User table \n        AND LEFT(i.Name, 1) <> '_' -- Remove hypothetical indexes \nORDER BY o.NAME ,\n        i.name; \n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Много ли индексов в Вашей базе данных?"}),(0,a.jsx)(t.xv,{p:!0,children:"Теперь можно посмотреть какие индексы полезные."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Статистика использования индексов"}),(0,a.jsx)(t.xv,{p:!0,children:"Индексы имеют свои издержки на обслуживание. Это и занимаемое место, и увеличение времени записи, а также потребность их реорганизации / ребилда после некоторого периода использования. Поэтому было бы не плохо понять какие индексы по-настоящему нужны. Для этого и нужна статистика использования индексов."}),(0,a.jsx)(d.Z,{code:"\nSELECT OBJECT_NAME(IX.OBJECT_ID) Table_Name\n	   ,IX.name AS Index_Name\n	   ,IX.type_desc Index_Type\n	   ,SUM(PS.[used_page_count]) * 8 IndexSizeKB\n	   ,IXUS.user_seeks AS NumOfSeeks\n	   ,IXUS.user_scans AS NumOfScans\n	   ,IXUS.user_lookups AS NumOfLookups\n	   ,IXUS.user_updates AS NumOfUpdates\n	   ,IXUS.last_user_seek AS LastSeek\n	   ,IXUS.last_user_scan AS LastScan\n	   ,IXUS.last_user_lookup AS LastLookup\n	   ,IXUS.last_user_update AS LastUpdate\nFROM sys.indexes IX\nINNER JOIN sys.dm_db_index_usage_stats IXUS ON IXUS.index_id = IX.index_id AND IXUS.OBJECT_ID = IX.OBJECT_ID\nINNER JOIN sys.dm_db_partition_stats PS on PS.object_id=IX.object_id\nWHERE OBJECTPROPERTY(IX.OBJECT_ID,'IsUserTable') = 1\nGROUP BY OBJECT_NAME(IX.OBJECT_ID) ,IX.name ,IX.type_desc ,IXUS.user_seeks ,IXUS.user_scans ,IXUS.user_lookups,IXUS.user_updates ,IXUS.last_user_seek ,IXUS.last_user_scan ,IXUS.last_user_lookup ,IXUS.last_user_update\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Этим скриптом Вы можете получить информацию о количестве операций поиска, сканирования и некоторых других операций на индексах. В итоге можно составить список тех объектов, которых из базы можно удалить."}),(0,a.jsx)(t.xv,{p:!0,children:"Для платформы 1С удаление неиспользуемых индексов штатными средствами не всегда возможно. Но если сильно захотеть…"}),(0,a.jsx)(t.xv,{p:!0,children:"Кроме этого, можно составить список индексов, которые имеют высокие издержки при использовании. Возможно, это “тяжелые” индексы, которые созданы на часто обновляемых таблицах или др. варианты."}),(0,a.jsx)(d.Z,{code:"\nSELECT TOP 1\n    [Maintenance cost]  = (user_updates + system_updates)\n       , [Retrieval usage] = (user_seeks + user_scans + user_lookups)\n       , DatabaseName = DB_NAME()\n       , TableName = OBJECT_NAME(s.[object_id])\n       , IndexName = i.name\nINTO #TempMaintenanceCost\nFROM sys.dm_db_index_usage_stats s\n    INNER JOIN sys.indexes i ON  s.[object_id] = i.[object_id]\n        AND s.index_id = i.index_id\nWHERE s.database_id = DB_ID()\n    AND OBJECTPROPERTY(s.[object_id], 'IsMsShipped') = 0\n    AND (user_updates + system_updates) > 0 -- Only report on active rows.\n    AND s.[object_id] = -999\n-- Dummy value to get table structure.\n;\n\n-- Loop around all the databases on the server.\nEXEC sp_MSForEachDB    'USE [?];\n-- Table already exists.\nINSERT INTO #TempMaintenanceCost\nSELECT TOP 10\n       [Maintenance cost]  = (user_updates + system_updates)\n       ,[Retrieval usage] = (user_seeks + user_scans + user_lookups)\n       ,DatabaseName = DB_NAME()\n       ,TableName = OBJECT_NAME(s.[object_id])\n       ,IndexName = i.name\nFROM   sys.dm_db_index_usage_stats s\nINNER JOIN sys.indexes i ON  s.[object_id] = i.[object_id]\n   AND s.index_id = i.index_id\nWHERE s.database_id = DB_ID()\n   AND i.name IS NOT NULL    -- Ignore HEAP indexes.\n   AND OBJECTPROPERTY(s.[object_id], ''IsMsShipped'') = 0\n   AND (user_updates + system_updates) > 0 -- Only report on active rows.\nORDER BY [Maintenance cost]  DESC\n;\n'\n-- Select records.\nSELECT TOP 10\n    *\nFROM #TempMaintenanceCost\nORDER BY [Maintenance cost]  DESC\n-- Tidy up.\nDROP TABLE #TempMaintenanceCost\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Что ж, информация об использовании индексов у нас есть. Мы можем понять какие индексы избыточны и что-то с ними сделать. Но чаще всего проблема вовсе не в избыточности индексов, а в их недостаточности."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Отсутствующие индексы"}),(0,a.jsx)(t.xv,{p:!0,children:"SQL Server на столько хорош, что может поделиться информацией об отсутствующих индексах, наличие которых бы смогло повысить эффективность работы запросов."}),(0,a.jsx)(d.Z,{code:"\nSELECT \n	@@ServerName AS ServerName, -- Имя сервера\n	DB_NAME() AS DBName, -- Имя базы\n	t.name AS 'Affected_table',	-- Имя таблицы\n	(LEN(ISNULL(ddmid.equality_columns, N'')\n              + CASE WHEN ddmid.equality_columns IS NOT NULL\n    AND ddmid.inequality_columns IS NOT NULL THEN ','\n                     ELSE ''\n                END) - LEN(REPLACE(ISNULL(ddmid.equality_columns, N'')\n                                   + CASE WHEN ddmid.equality_columns\n                                                             IS NOT NULL\n    AND ddmid.inequality_columns\n                                                             IS NOT NULL\n                                          THEN ','\n                                          ELSE ''\n                                     END, ',', '')) ) + 1 AS K, -- Количество ключей в индексе\n  COALESCE(ddmid.equality_columns, '')\n        + CASE WHEN ddmid.equality_columns IS NOT NULL\n    AND ddmid.inequality_columns IS NOT NULL THEN ','\n               ELSE ''\n          END + COALESCE(ddmid.inequality_columns, '') AS Keys, -- Ключевые столбцы индекса\n  COALESCE(ddmid.included_columns, '') AS [include], -- Неключевые столбцы индекса\n  'Create NonClustered Index IX_' + t.name + '_missing_'\n        + CAST(ddmid.index_handle AS VARCHAR(20)) \n        + ' On ' + ddmid.[statement] COLLATE database_default\n        + ' (' + ISNULL(ddmid.equality_columns, '')\n        + CASE WHEN ddmid.equality_columns IS NOT NULL\n    AND ddmid.inequality_columns IS NOT NULL THEN ','\n               ELSE ''\n          END + ISNULL(ddmid.inequality_columns, '') + ')'\n        + ISNULL(' Include (' + ddmid.included_columns + ');', ';')\n                                                  AS sql_statement, -- Команда для создания индекса\n  ddmigs.user_seeks, -- Количество операций поиска\n  ddmigs.user_scans, -- Количество операций сканирования\n  CAST(( ddmigs.user_seeks + ddmigs.user_scans)\n        * ddmigs.avg_user_impact AS BIGINT) AS 'est_impact', \n  avg_user_impact, -- Средний процент выигрыша\n  ddmigs.last_user_seek, -- Последняя операция поиска\n  ( SELECT DATEDIFF(Second, create_date, GETDATE()) Seconds\n  FROM sys.databases\n  WHERE     name = 'tempdb'\n        ) SecondsUptime\nFROM sys.dm_db_missing_index_groups ddmig\n  INNER JOIN sys.dm_db_missing_index_group_stats ddmigs\n  ON ddmigs.group_handle = ddmig.index_group_handle\n  INNER JOIN sys.dm_db_missing_index_details ddmid\n  ON ddmig.index_handle = ddmid.index_handle\n  INNER JOIN sys.tables t ON ddmid.OBJECT_ID = t.OBJECT_ID\nWHERE   ddmid.database_id = DB_ID()\nORDER BY est_impact DESC;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Результат - это таблица, в которой представлена информация о таблице, списке полей для индекса, команду T-SQL для создания этого индекса, а также оценка влияния на производительность предполагаемого индекса и статистика запросов, которые этот индекс будут использовать."}),(0,a.jsxs)(t.xv,{p:!0,children:["Информация очень ценная. Конечно, информация не должна восприниматься как истина. Нужно разумно подходить к тому, что предлагает SQL Server, ведь контекст запросов ему неизвестен. Многие индексы можно создать средствами платформы 1С (хотя бы примерно), но есть и те, что просто так в базу не добавить. В этом случае Вам может помочь информация из статьи ",(0,a.jsx)("b",{children:(0,a.jsx)("u",{children:(0,a.jsx)(t.e9,{newTab:!0,href:"/pages/blog/DevOps/2018-11/custom-index-for-1C.tsx",children:"“Создаем свои индексы для баз 1С. Со своей структурой и настройками!”."})})}),"."]}),(0,a.jsx)(t.xv,{p:!0,children:"Еще одним важным показателем состояния индексов является процент фрагментации."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Проверка фрагментации индексов"}),(0,a.jsx)(t.xv,{p:!0,children:"Чем выше процент фрагментации индекса в базе, тем меньше его эффективность. Почему? Все просто - части индекса разбросаны по файлу базы данных и для использования индекса все эти части нужно собрать. Чем больше фрагментация, тем сложнее это сделать. В случаях, когда процент фрагментации большой, СУБД может вообще отказаться от использования такого индекса."}),(0,a.jsx)(d.Z,{code:"\nSELECT\n	DB_NAME([IF].database_id) AS [Имя базы] \n	,OBJECT_NAME(object_id) AS [Имя таблицы]	\n	,OBJECT_NAME([IF].index_id) AS [Имя индкса]	\n	,[IF].*\nFROM sys.dm_db_index_physical_stats(DB_ID(), null, null, null, null) AS [IF]\nWHERE avg_fragmentation_in_percent > 30\nORDER BY avg_fragmentation_in_percent\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Скриптом выше можно посмотреть список индексов, процент фрагментации которых выше 30%. Далее нужно будет подумать об исправлении / улучшении обслуживания индексов."}),(0,a.jsx)(t.xv,{p:!0,children:"Вы знаете, что делать с индексами дальше!"}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Статистику бы проверить"}),(0,a.jsx)(t.xv,{p:!0,children:"С индексами разобрались, но для их корректной работы очень важно состояние статистики базы данных."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Статистику бы проверить"}),(0,a.jsx)(t.xv,{p:!0,children:"Состояние статистики"}),(0,a.jsx)(t.xv,{p:!0,children:"Для проверки состояния статистики можно использовать два скрипта. Первый с общей информацией."}),(0,a.jsx)(d.Z,{code:"\nselect\n    o.name AS [TableName],\n    a.name AS [StatName],\n    a.rowmodctr AS [RowsChanged],\n    STATS_DATE(s.object_id, s.stats_id) AS [LastUpdate],\n    o.is_ms_shipped,\n    s.is_temporary,\n    p.*\nfrom sys.sysindexes a\n    inner join sys.objects o\n    on a.id = o.object_id\n        and o.type = 'U'\n        and a.id > 100\n        and a.indid > 0\n    left join sys.stats s\n    on a.name = s.name\n    left join (\nSELECT\n        p.[object_id]\n, p.index_id\n, total_pages = SUM(a.total_pages)\n    FROM sys.partitions p WITH(NOLOCK)\n        JOIN sys.allocation_units a WITH(NOLOCK) ON p.[partition_id] = a.container_id\n    GROUP BY \np.[object_id]\n, p.index_id\n) p ON o.[object_id] = p.[object_id] AND p.index_id = s.stats_id\norder by\n    a.rowmodctr desc,\n    STATS_DATE(s.object_id, s.stats_id) ASC\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Так мы узнаем список таблиц их объекты статистики, а также количество изменений с момента последнего обновления статистики и дату последнего обновления. Проверьте, есть ли в Вашей базе статистика, которая не обслуживалась много лет или месяцев? В этом плане часто можно увидеть сюрпризы."}),(0,a.jsx)(t.xv,{p:!0,children:"Для расследования конкретных проблем с производительностью в части статистики можно использовать более подробный диагностический скрипт."}),(0,a.jsx)(d.Z,{code:"\nSET NOCOUNT ON;\n\nDECLARE \n	@table_name nvarchar(max) = '<IndexName>.<TableName>'\n	,@object_name nvarchar(max) = '<ObjectName>'\n	,@stat_header_cmd nvarchar(max)\n	,@the_histogram_cmd nvarchar(max)\n	,@the_density_vector_cmd nvarchar(max);\n\nSELECT @stat_header_cmd = 'DBCC SHOW_STATISTICS (''' + @table_name + ''', ''' + @object_name + ''') WITH  STAT_HEADER';\nSELECT @the_histogram_cmd = 'DBCC SHOW_STATISTICS (''' + @table_name + ''', ''' + @object_name + ''') WITH HISTOGRAM';\nSELECT @the_density_vector_cmd = 'DBCC SHOW_STATISTICS (''' + @table_name + ''', ''' + @object_name + ''') WITH DENSITY_VECTOR';\n\nIF OBJECT_ID('tempdb..#the_stat_header') IS NOT NULL\n	DROP TABLE #the_stat_header;\nIF OBJECT_ID('tempdb..#the_histogram ') IS NOT NULL\n	DROP TABLE #the_histogram;\nIF OBJECT_ID('tempdb..#the_density_vector ') IS NOT NULL\n	DROP TABLE #the_density_vector;\n\nCREATE TABLE #the_stat_header (\n    [Name] sql_variant NULL\n,   [Updated] sql_variant NULL\n,   [Rows] sql_variant NULL\n,   [Rows Sampled] sql_variant NULL\n,   [Steps] sql_variant NULL\n,   [Density] sql_variant NULL\n,   [Average key length] sql_variant NULL\n,   [String index] sql_variant NULL\n,   [Filter Expression] nvarchar(max) NULL\n,   [Unfiltered Rows] sql_variant NULL\n)\nINSERT INTO #the_stat_header EXEC (@stat_header_cmd)\n\nCREATE TABLE #the_density_vector (\n    [All density] sql_variant\n,   [Average Length] sql_variant\n,   [Columns] sql_variant\n)\nINSERT INTO #the_density_vector EXEC (@the_density_vector_cmd)\n\nCREATE TABLE #the_histogram (\n    [RANGE_HI_KEY] sql_variant\n,   [RANGE_ROWS] sql_variant\n,   [EQ_ROWS] sql_variant\n,   [DISTINCT_RANGE_ROWS]  sql_variant\n,   [AVG_RANGE_ROWS] sql_variant\n)\nINSERT INTO #the_histogram EXEC (@the_histogram_cmd)\n\nSELECT  \n	-- Имя объекта статистики.\n	[Name] AS [Имя]\n	-- Дата и время последнего обновления статистики. \n	-- Функция STATS_DATE представляет собой альтернативный способ получения этих данных.\n	,[Updated] AS [Обновлен]\n	-- Общее число строк в таблице или индексированном представлении при последнем обновлении статистики. \n	-- Если статистика отфильтрована или соответствует отфильтрованному индексу, количество строк может быть меньше, чем количество строк в таблице.\n	,[Rows] AS [Строка]\n	-- Общее количество строк, выбранных для статистических вычислений. \n	-- Если имеет место условие \xabколичество строк выборки < количество строк таблицы\xbb, \n	-- то отображаемые результаты определения гистограммы и вычисления плотности \n	-- представляют собой оценки, основанные на строках выборки.\n	,[Rows Sampled] AS [Количество строк для стат. вычислений]\n	-- Число шагов в гистограмме. Каждый шаг охватывает диапазон значений столбцов,\n	-- за которым следует значение столбца, представляющее собой верхнюю границу. \n	-- Шаги гистограммы определяются в первом ключевом столбце статистики. Максимальное число шагов — 200.\n	,[Steps] AS [Шаги]\n	-- Рассчитывается как 1 / различающиеся значения для всех значений в первом ключевом столбце объекта статистики, \n	-- исключая возможные значения гистограммы. Это значение плотности не используется оптимизатором запросов \n	-- и отображается для обратной совместимости с версиями, выпущенными до SQL Server 2008.\n	,[Density] AS [Плотность]\n	-- Среднее число байтов на значение для всех ключевых столбцов в объекте статистики.\n	,[Average key length] AS [Средняя длина ключа]\n	-- Значение \xabДа\xbb указывает, что объект статистики содержит сводную строковую статистику, \n	-- позволяющую уточнить оценку количества элементов для предикатов запроса, использующих оператор LIKE, \n	-- например WHERE ProductName LIKE '%Bike'. Сводная строковая статистика хранится отдельно от гистограммы \n	-- и создается в первом ключевом столбце объекта статистики, если он имеет тип char, varchar, nchar, nvarchar, varchar(max), nvarchar(max), text или ntext.\n	,[String index] AS [Используется сводная строковая статистика]\n	-- Предикат для подмножества строк таблицы, включенных в объект статистики. NULL — неотфильтрованная статистика. \n	,[Filter Expression] AS [Критерий фильтра]\n	-- Общее количество строк в таблице перед применением критерия фильтра. \n	-- Если Filter Expression имеет значение NULL, то столбец Unfiltered Rows совпадает со столбцом Rows.\n	,[Unfiltered Rows] AS [Количество строк без учета фильтра]\nFROM #the_stat_header\n\nSELECT\n	-- Плотность равна 1 / различающиеся значения. В результатах отображаются плотности для каждого префикса столбцов объекта статистики, \n	-- по одной строке на плотность. Различающееся значение — это отдельный список значений столбцов на строку и на префикс столбцов. \n	-- Например, если объект статистики содержит ключевые столбцы (A, B, C), то в результатах приводится плотность отдельных списков значений \n	-- в каждом из следующих префиксов столбцов: (A), (A, B) и (A, B, C). \n	-- При использовании префикса (A, B, C) каждый из этих списков является отдельным списком значений: (3, 5, 6), (4, 4, 6), (4, 5, 6), (4, 5, 7). \n	-- При использовании префикса (A, B) одинаковые значения столбцов имеют следующие отдельные списки значений: (3, 5), (4, 4) и (4, 5).\n	[All density] AS [Общая плотность]\n	-- Средняя длина (в байтах) для хранения списка значений столбца для данного префикса столбца. \n	-- Если каждому значению в списке (3, 5, 6), например, требуется по 4 байта, то длина составляет 12 байт.\n	,[Average Length] AS [Средняя длина]\n	-- Имена столбцов в префиксе, для которых отображаются значения \xabОбщая плотность\xbb и \xabСредняя длина\xbb.\n	,[Columns] AS [Столбцы]\nFROM #the_density_vector\n\nSELECT\n	-- Верхнее граничное значение столбца для шага гистограммы. Это значение столбца называется также ключевым значением.\n	[RANGE_HI_KEY] AS [Верхняя граница значения столбца]\n	-- Предполагаемое количество строк, значение столбцов которых находится в пределах шага гистограммы, исключая верхнюю границу.\n	,[RANGE_ROWS] AS [Предполагаемое количество строк]\n	-- Предполагаемое количество строк, значение столбцов которых равно верхней границе шага гистограммы.\n	,[EQ_ROWS] AS [Предполагаемое количество строк, равное верхней границе значений]\n	-- Предполагаемое количество строк с различающимся значением столбца в пределах шага гистограммы, исключая верхнюю границу.\n	,[DISTINCT_RANGE_ROWS] AS [Предполагаемое количество строк с различающимися значениями в шаге гистограммы]\n	-- Среднее количество строк с повторяющимися значениями столбца в пределах шага гистограммы, исключая верхнюю границу. \n	-- Если значение DISTINCT_RANGE_ROWS больше 0, AVG_RANGE_ROWS вычисляется делением RANGE_ROWS на DISTINCT_RANGE_ROWS. \n	-- Если значение DISTINCT_RANGE_ROWS равно 0, AVG_RANGE_ROWS возвращает значение 1 для шага гистограммы.\n	,[AVG_RANGE_ROWS] AS [Среднее количество строк с повторяющимися значениями в шаге гистограммы]\nFROM #the_histogram\n\nIF OBJECT_ID('tempdb..#the_stat_header') IS NOT NULL\n	DROP TABLE #the_stat_header;\nIF OBJECT_ID('tempdb..#the_histogram ') IS NOT NULL\n	DROP TABLE #the_histogram;\nIF OBJECT_ID('tempdb..#the_density_vector ') IS NOT NULL\n	DROP TABLE #the_density_vector;\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Если кратко, то так мы можем получить дополнительную информацию об объектах статистики, гистограмме распределения, плотности и многое другое. Обычно эту информацию не приходится использовать, только в каких-либо сложных расследованиях или экспериментах."}),(0,a.jsx)(t.xv,{p:!0,children:"Нашли проблему в обслуживании? Обслужите статистику!"}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Производительность - наше все!"}),(0,a.jsx)(t.xv,{p:!0,children:"На финал оставим скрипты для диагностики производительности. На самом деле очень много различных подходов для анализа проблем производительности. Как было сказано в начале статьи, только скриптами не всегда удается найти причину проблем и нужен полноценный мониторинг. Но общее направление для расследования понять точно можно."}),(0,a.jsx)(t.xv,{p:!0,children:"Лакмусовой бумажкой работы СУБД является статистика по ожиданиям, с помощью которой можно понять что же не так со SQL Server."}),(0,a.jsx)(d.Z,{code:"\nWITH [Waits] AS\n    (SELECT\n        [wait_type],\n        [wait_time_ms] / 1000.0 AS [WaitS],\n        ([wait_time_ms] - [signal_wait_time_ms]) / 1000.0 AS [ResourceS],\n        [signal_wait_time_ms] / 1000.0 AS [SignalS],\n        [waiting_tasks_count] AS [WaitCount],\n       100.0 * [wait_time_ms] / SUM ([wait_time_ms]) OVER() AS [Percentage],\n        ROW_NUMBER() OVER(ORDER BY [wait_time_ms] DESC) AS [RowNum]\n    FROM sys.dm_os_wait_stats\n    WHERE [wait_type] NOT IN (\n        N'BROKER_EVENTHANDLER', N'BROKER_RECEIVE_WAITFOR',\n        N'BROKER_TASK_STOP', N'BROKER_TO_FLUSH',\n        N'BROKER_TRANSMITTER', N'CHECKPOINT_QUEUE',\n        N'CHKPT', N'CLR_AUTO_EVENT',\n        N'CLR_MANUAL_EVENT', N'CLR_SEMAPHORE',\n \n        -- Maybe uncomment these four if you have mirroring issues\n        N'DBMIRROR_DBM_EVENT', N'DBMIRROR_EVENTS_QUEUE',\n        N'DBMIRROR_WORKER_QUEUE', N'DBMIRRORING_CMD',\n \n        N'DIRTY_PAGE_POLL', N'DISPATCHER_QUEUE_SEMAPHORE',\n        N'EXECSYNC', N'FSAGENT',\n        N'FT_IFTS_SCHEDULER_IDLE_WAIT', N'FT_IFTSHC_MUTEX',\n \n        -- Maybe uncomment these six if you have AG issues\n        N'HADR_CLUSAPI_CALL', N'HADR_FILESTREAM_IOMGR_IOCOMPLETION',\n        N'HADR_LOGCAPTURE_WAIT', N'HADR_NOTIFICATION_DEQUEUE',\n        N'HADR_TIMER_TASK', N'HADR_WORK_QUEUE',\n \n        N'KSOURCE_WAKEUP', N'LAZYWRITER_SLEEP',\n        N'LOGMGR_QUEUE', N'MEMORY_ALLOCATION_EXT',\n        N'ONDEMAND_TASK_QUEUE',\n        N'PREEMPTIVE_XE_GETTARGETSTATE',\n        N'PWAIT_ALL_COMPONENTS_INITIALIZED',\n        N'PWAIT_DIRECTLOGCONSUMER_GETNEXT',\n        N'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP', N'QDS_ASYNC_QUEUE',\n        N'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',\n        N'QDS_SHUTDOWN_QUEUE', N'REDO_THREAD_PENDING_WORK',\n        N'REQUEST_FOR_DEADLOCK_SEARCH', N'RESOURCE_QUEUE',\n        N'SERVER_IDLE_CHECK', N'SLEEP_BPOOL_FLUSH',\n        N'SLEEP_DBSTARTUP', N'SLEEP_DCOMSTARTUP',\n        N'SLEEP_MASTERDBREADY', N'SLEEP_MASTERMDREADY',\n        N'SLEEP_MASTERUPGRADED', N'SLEEP_MSDBSTARTUP',\n        N'SLEEP_SYSTEMTASK', N'SLEEP_TASK',\n        N'SLEEP_TEMPDBSTARTUP', N'SNI_HTTP_ACCEPT',\n        N'SP_SERVER_DIAGNOSTICS_SLEEP', N'SQLTRACE_BUFFER_FLUSH',\n        N'SQLTRACE_INCREMENTAL_FLUSH_SLEEP',\n        N'SQLTRACE_WAIT_ENTRIES', N'WAIT_FOR_RESULTS',\n        N'WAITFOR', N'WAITFOR_TASKSHUTDOWN',\n        N'WAIT_XTP_RECOVERY',\n        N'WAIT_XTP_HOST_WAIT', N'WAIT_XTP_OFFLINE_CKPT_NEW_LOG',\n        N'WAIT_XTP_CKPT_CLOSE', N'XE_DISPATCHER_JOIN',\n        N'XE_DISPATCHER_WAIT', N'XE_TIMER_EVENT')\n    AND [waiting_tasks_count] > 0\n    )\nSELECT\n    MAX ([W1].[wait_type]) AS [WaitType],\n    CAST (MAX ([W1].[WaitS]) AS DECIMAL (16,2)) AS [Wait_S],\n    CAST (MAX ([W1].[ResourceS]) AS DECIMAL (16,2)) AS [Resource_S],\n    CAST (MAX ([W1].[SignalS]) AS DECIMAL (16,2)) AS [Signal_S],\n    MAX ([W1].[WaitCount]) AS [WaitCount],\n    CAST (MAX ([W1].[Percentage]) AS DECIMAL (5,2)) AS [Percentage],\n    CAST ((MAX ([W1].[WaitS]) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)) AS [AvgWait_S],\n    CAST ((MAX ([W1].[ResourceS]) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)) AS [AvgRes_S],\n    CAST ((MAX ([W1].[SignalS]) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)) AS [AvgSig_S],\n    CAST ('https://www.sqlskills.com/help/waits/' + MAX ([W1].[wait_type]) as XML) AS [Help/Info URL]\nFROM [Waits] AS [W1]\nINNER JOIN [Waits] AS [W2]\n    ON [W2].[RowNum] <= [W1].[RowNum]\nGROUP BY [W1].[RowNum]\nHAVING SUM ([W2].[Percentage]) - MAX( [W1].[Percentage] ) < 95; -- percentage threshold\n                ",className:"my-5",language:"sql"}),(0,a.jsxs)(t.xv,{p:!0,children:["Запрос покажет что именно ожидает SQL Server и даст ссылку на информацию о данном типе ожидания. Отличная статья на эту тему (там же и был взят скрипт) ",(0,a.jsx)("b",{children:(0,a.jsx)("u",{children:(0,a.jsx)(t.e9,{newTab:!0,href:"https://www.sqlskills.com/blogs/paul/wait-statistics-or-please-tell-me-where-it-hurts/",children:"“SQL Server Wait Statistics (or please tell me where it hurts…)”"})})})," от ",(0,a.jsx)("b",{children:(0,a.jsx)("u",{children:(0,a.jsx)(t.e9,{newTab:!0,href:"https://www.sqlskills.com/blogs/paul/author/paul/",children:"Paul Randal."})})})]}),(0,a.jsx)(t.xv,{p:!0,children:"Далее можно посмотреть на статистику использования процессорных ресурсов и дисковой подсистемы по базам."}),(0,a.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Использование CPU и дисков по базам"}),(0,a.jsx)(t.xv,{p:!0,children:"Для CPU скрипт такой."}),(0,a.jsx)(d.Z,{code:"\nWITH\n    DB_CPU_Stats\n    AS\n    (\n        SELECT DatabaseID, DB_Name(DatabaseID) AS [DatabaseName], SUM(total_worker_time) AS [CPU_Time_Ms]\n        FROM sys.dm_exec_query_stats AS qs\nCROSS APPLY (SELECT CONVERT(int, value) AS [DatabaseID]\n            FROM sys.dm_exec_plan_attributes(qs.plan_handle)\n            WHERE attribute = N'dbid') AS F_DB\n        GROUP BY DatabaseID\n    )\nSELECT ROW_NUMBER() OVER(ORDER BY [CPU_Time_Ms] DESC) AS [row_num],\n    DatabaseName, [CPU_Time_Ms],\n    CAST([CPU_Time_Ms] * 1.0 / SUM([CPU_Time_Ms]) OVER() * 100.0 AS DECIMAL(5, 2)) AS [CPUPercent]\nFROM DB_CPU_Stats\nWHERE DatabaseID > 4 -- system databases\n    AND DatabaseID <> 32767\n-- ResourceDB\nORDER BY row_num\nOPTION\n(RECOMPILE);\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Для дисков ниже."}),(0,a.jsx)(d.Z,{code:"\nWITH DB_Disk_Reads_Stats\n\nAS\n\n(SELECT DatabaseID, DB_Name(DatabaseID) AS [DatabaseName], SUM(total_physical_reads) AS [physical_reads]\n\n FROM sys.dm_exec_query_stats AS qs\n\n CROSS APPLY (SELECT CONVERT(int, value) AS [DatabaseID] \n\n              FROM sys.dm_exec_plan_attributes(qs.plan_handle)\n\n              WHERE attribute = N'dbid') AS F_DB\n\n GROUP BY DatabaseID)\n\nSELECT ROW_NUMBER() OVER(ORDER BY [physical_reads] DESC) AS [row_num],\n\n       DatabaseName, [physical_reads], \n\n       CAST([physical_reads] * 1.0 / SUM([physical_reads]) OVER() * 100.0 AS DECIMAL(5, 2)) AS [Physical_Reads_Percent]\n\nFROM DB_Disk_Reads_Stats\n\nWHERE DatabaseID > 4 -- system databases\n\nAND DatabaseID <> 32767 -- ResourceDB\n\nORDER BY row_num OPTION (RECOMPILE);\n                ",className:"my-5",language:"sql"}),(0,a.jsx)(t.xv,{p:!0,children:"Примерное представление о “тяжелых” системах это позволяет получить."}),(0,a.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Пока что все"}),(0,a.jsx)(t.xv,{p:!0,children:"В статье нет готового рецепта для решения всех проблем. Лишь скрипты. Скрипты для начала знакомства с сервером СУБД, получения узкой информации и получения сведений о потенциальных проблемах."}),(0,a.jsx)(t.xv,{p:!0,children:"Дальше все зависит только от Вас!"})]})},9963:function(e,n,s){"use strict";var a,t;s.d(n,{b:function(){return a}}),(t=a||(a={})).Min="350px",t.Standard="700px",t.Large="1000x",t.Unlimited=""},6671:function(e,n,s){"use strict";var a=s(7340),t=s(5893),d=s(7294),i=s(4965),_=s(4275),r=s(964),l=s(9963);function E(){let e=(0,a._)(["\n        text-align: left;\n        overflow: hidden;\n        font-size: 14px;\n        border-radius: 6px;\n        overflow: auto;\n\n        & .token-line {\n            line-height: 1.3em;\n            height: 1.3em;\n        }\n    "]);return E=function(){return e},e}function S(){let e=(0,a._)(["\n        max-height: ","\n    "]);return S=function(){return e},e}n.Z=e=>{let{code:n,className:a,language:c,maxHeight:N=l.b.Standard}=e;(void 0!==s.g?s.g:window).Prism=i.p1,s(1354),s(9016),s(5266),s(2927),s(1315),s(7874),s(6862);let m=null!=N?N:l.b.Standard,A=r.ZP.pre(E()),o=(0,r.ZP)(A)(S(),m);return(0,t.jsx)("div",{className:(0,_.GF)("bg-blue-500 md:p-1 p-2",a),children:(0,t.jsx)("div",{className:"shadow-lg",children:(0,t.jsx)(i.y$,{theme:i.np.vsDark,code:n.trim(),language:null!=c?c:c="tsx",children:e=>{let{className:n,style:s,tokens:a,getLineProps:i,getTokenProps:_}=e;return(0,t.jsx)(o,{className:n,style:s,children:a.map((e,n)=>(0,d.createElement)("div",{...i({line:e,key:n}),key:Math.random()},e.map((e,n)=>(0,d.createElement)("span",{..._({token:e,key:n}),key:Math.random()}))))})}})})})}},9305:function(e,n,s){"use strict";s.d(n,{Ee:function(){return _},Xg:function(){return d},Y7:function(){return S},aV:function(){return l},e9:function(){return E},o_:function(){return c},ty:function(){return r},xv:function(){return i}});var a=s(5152),t=s.n(a);let d=t()(()=>Promise.all([s.e(4838),s.e(4738),s.e(1664),s.e(7167)]).then(s.bind(s,7167)),{loadableGenerated:{webpack:()=>[7167]}}),i=t()(()=>s.e(9179).then(s.bind(s,9179)),{loadableGenerated:{webpack:()=>[9179]}}),_=t()(()=>s.e(1974).then(s.bind(s,1974)),{loadableGenerated:{webpack:()=>[1974]}}),r=t()(()=>s.e(8547).then(s.bind(s,8547)),{loadableGenerated:{webpack:()=>[8547]}}),l=t()(()=>s.e(6806).then(s.bind(s,6806)),{loadableGenerated:{webpack:()=>[6806]}}),E=t()(()=>Promise.all([s.e(1664),s.e(1465)]).then(s.bind(s,1465)),{loadableGenerated:{webpack:()=>[1465]}});t()(()=>s.e(567).then(s.bind(s,567)),{loadableGenerated:{webpack:()=>[567]}});let S=t()(()=>Promise.all([s.e(2004),s.e(4139)]).then(s.bind(s,4139)),{loadableGenerated:{webpack:()=>[4139]}}),c=t()(()=>Promise.all([s.e(3811),s.e(7472),s.e(584),s.e(7870)]).then(s.bind(s,7870)),{loadableGenerated:{webpack:()=>[7870]}})}},function(e){e.O(0,[1102,2888,9774,179],function(){return e(e.s=3794)}),_N_E=e.O()}]);