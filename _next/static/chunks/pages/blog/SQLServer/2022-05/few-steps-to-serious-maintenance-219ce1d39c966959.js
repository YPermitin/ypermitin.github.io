(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3651],{7405:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/SQLServer/2022-05/few-steps-to-serious-maintenance",function(){return s(5574)}])},5574:function(e,n,s){"use strict";s.r(n);var i=s(5893),l=s(9305);s(7294);var a=s(850),r=s(7105);n.default=()=>(0,i.jsxs)(l.Xg,{blogcentered:!0,children:[(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Об этом много сказано"}),(0,i.jsx)(l.xv,{p:!0,children:"Тема обслуживания баз данных (индексов и статистик) поднимается достаточно часто в разных статьях, официальной документации, на форумах и так далее. Обычно дается описание процессов обслуживания, зачем они нужны и какие бывают, на что влияют. И, конечно же, как сделать настройку обслуживания. Последнее обычно преподносится на базовом уровне, но, конечно, не всегда."}),(0,i.jsx)(l.xv,{p:!0,children:"Сегодня мы снова коснемся этой темы, но несколько в ином ключе. Мы на практических примерах посмотрим на настройку обслуживания от простого случая до более продвинутого. Так можно будет проследить как меняется обслуживание при изменении требований к работе информационной системы."}),(0,i.jsx)(l.xv,{p:!0,children:"Мы сосредоточимся на решении именно практических задач. Теорию Вы можете найти по ссылкам в конце статьи."}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Общие слова"}),(0,i.jsx)(l.xv,{p:!0,children:"Прежде чем мы перейдем к примерам, определимся с тем, что будем делать."}),(0,i.jsx)(l.xv,{p:!0,children:"Обслуживание подразумевает две больших части:"}),(0,i.jsxs)(l.aV,{type:r.RH.number,children:[(0,i.jsx)("li",{children:"Поддержание фрагментации индексов на приемлемом уровне. В идеале процент фрагментации у каждого индекса должен быть равен 0 или близок к этому значению."}),(0,i.jsx)("li",{children:"Состояние статистики должно быть в максимально в актуальном состоянии. При изменении строк в таблице, объекты статистики должны иметь гистограмму распределения значений, которая отражает состояние объектов базы наиболее актуальным образом."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Все это влияет на формируемые планы запросов. В самых общих чертах, если индекс имеет высокую фрагментацию или статистика знатно устарела, то оптимизатор SQL Server даже не будет пытаться использовать индекс и выполнит полное сканирование таблицы. Последнее, как Вы понимаете, не самая быстрая и оптимальная ситуация. Есть и другие последствия отсутствия обслуживания, но это совсем другая история."}),(0,i.jsx)(l.xv,{p:!0,children:"Также сразу отметим, что никаких сторонних программ для настройки обслуживания мы использовать не будем. Чистый TSQL, возможно, в готовых скриптах и/или хранимых процедурах. Но никакого стороннего софта."}),(0,i.jsx)(l.xv,{p:!0,children:"Итак, настало время первого примера!"}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Примеры, примеры, примеры"}),(0,i.jsx)(l.xv,{p:!0,children:"На старт, внимание, марш!"}),(0,i.jsx)(l.xv,{subtitle:!0,className:"mt-10 md:text",children:"Типичное обслуживание"}),(0,i.jsx)(l.xv,{p:!0,children:"Когда речь заходит об обслуживании, то обычно начинают с создания плана обслуживания, где используют готовые компоненты. Для этого создаем план обслуживания через SQL Server Managment Studio в разделе “Managment ➡️ Maintenance Plans” с субпланом “FullMaintenance”."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/1. Простой план обслуживания.png",alt:"Простой план обслуживания",size:r.h2.MEDIUM}),(0,i.jsx)(l.xv,{p:!0,children:"Механизм планов обслуживания базируется на “обрезанной” версии SSIS, если так можно выразиться. Для использования готовых компонентов нужно использовать именно его."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/2. Раздел обслуживания.png",alt:"Раздел обслуживания",size:r.h2.XS}),(0,i.jsx)(l.xv,{p:!0,children:"Альтернативным вариантом является использование заданий (job’ов) агента SQL Server, просто указывая явно скрипты TSQL для выполнения."}),(0,i.jsx)(l.xv,{p:!0,children:"В созданный субплан добавляем три компонента. Выше Вы уже могли видеть схему субплана обслуживания."}),(0,i.jsx)(l.xv,{subtitle:!0,className:"mt-10 md:text",children:"Rebuild Index Task"}),(0,i.jsx)(l.xv,{p:!0,children:"Компонент перестроения индексов “Rebuild Index Task” имеет в себе большинство необходимых настроек для запуска простого обслуживания."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/3. Rebuild Index Task.png",alt:"Rebuild Index Task",size:r.h2.MEDIUM}),(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Connection"})," - указываем параметры соединения с базой данных, сервером СУБД. Обычно здесь остается стандартная настройка, останавливаться подробней не будем."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Database(s)"})," - указываем для какой базы (или списка баз) нужно выполнять обслуживание. Обычный фильтр."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Object"})," - здесь мы можем выбрать для каких объектов базы данных нужно выполнять обслуживание.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Tables and Views"})," - все объекты базы."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Tables"})," - таблицы базы, можно указать все или выбрать конкретные."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Views"})," - представления базы, можно указать все или выбрать конкретные."]})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Free space options"})," - параметр отвечает за то, сколько процентов свободного места нужно оставлять в каждой странице. По умолчанию используются стандартные параметры сервера, но это значение можно переопределить. Если оставлять некоторое место на страницах свободным, то можно уменьшить рост фрагментации индексов, т.к. изменения будут дописываться в существующие страницы и связанные данные меньше будут “раскидываться” между отдельными страницами. Подробнее читайте в документации, рассматривать это сегодня более детально не будем."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Advaned options"})," - это различные дополнительные настройки для более тонкого управления обслуживанием индексов.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Sort results in tempdb"})," - этот флаг включает хранение промежуточных результатов сортировки при формировании индекса. По умолчанию они хранятся в памяти или целевой файловой группе. По умолчанию он установлен в ЛОЖЬ."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Keep index online"})," - SQL Server поддерживает перестроение индексов в онлайн режиме, при котором работа с таблицей и индексом не блокируется во время выполнения обслуживания. По завершению перестроения выполняется переключение старого индекса на новый, что позволяет исключить блокирование работы запросов и выполнять обслуживание при минимальном размере технологического окна. Или при его полном отсутствии. Дополнительно к этому режиму указывают варианты действия для тех индексов, которые не поддерживают онлайн-обслуживание (например, если содержат типы text, ntext, image, filestream. Первые 3 считаются устаревшими, но все еще поддерживаются для совместимости). В момент переключения, конечно же, кратковременно создается блокировка на уровне схемы данных и есть различные сценарии обработки этой блокировки. Об этом подробней мы поговорим ниже.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Do not rebuild"})," - индексы без поддержки онлайн перестроения будут пропущены."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Rebuild indexes offline"})," - индекс без поддержки онлайн перестроения будет обслужен в обычном режиме с блокировкой работы с ним."]})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Pad index"})," - указать заполнение индекса. Определяет разреженность индекса. По умолчанию выключен. При включении настройка fillfactor применяется к страницам промежуточного индекса."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"MAXDOP"})," - указываем степень параллелизма для операций обслуживания. Таким образом можно указать параметр, отличный от значения параметра всего сервера."]})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Index Stats Options"})," - параметры анализа индексов перед обслуживанием. Фактически это режимы просмотра для системной DMV sys.dm_db_index_physical_stats, которые влияют на работу некоторых фильтров и точность результатов анализа. Но зато поверхностный анализ позволяет ускорить запросы перед началом обслуживания. Детальный анализ потребует больше времени и создаст дополнительную нагрузку на сервер.",(0,i.jsxs)(l.aV,{children:[(0,i.jsx)("li",{children:(0,i.jsx)("b",{children:"Fash"})}),(0,i.jsx)("li",{children:(0,i.jsx)("b",{children:"Sampled"})}),(0,i.jsx)("li",{children:(0,i.jsx)("b",{children:"Detailed"})})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Oprimize index only if"})," - дополнительные фильтры для обслуживаемых индексов.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Fragmnetation"})," ",">"," - фрагментация должна быть больше определенного процента. Общепринятым правилом считается, что перестроение нужно выполнять, если фрагментация выше 30%."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Page Count"})," - фильтр по размеру индекса. Указывается в количестве страниц. Каждая страница = 8 КБ."]})]})]})]}),(0,i.jsx)(l.xv,{p:!0,children:"Базовые настройки именно такие."}),(0,i.jsx)(l.xv,{subtitle:!0,className:"mt-10 md:text",children:"Reorganize Index Task"}),(0,i.jsx)(l.xv,{p:!0,children:"Компонент реорганизации индексов “Reorganize Index Task”. Позволяет выполнять операции реорганизации, которые требуют меньше ресурсов, чем перестроение. Также этот процесс выполняется без долгосрочных блокировок объекта и минимально влияет на текущую работу запросов. Обычно дефрагментация при таком способе выполняется для страниц конечного уровня, что делает такую операцию не всегда оптимальным вариантом."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/4. Reorganize Index Task.png",alt:"Reorganize Index Task",size:r.h2.MEDIUM}),(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Connection"})," - указываем параметры соединения с базой данных, сервером СУБД. Обычно здесь остается стандартная настройка, останавливаться подробней не будем."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Database(s)"})," - указываем для какой базы (или списка баз) нужно выполнять обслуживание. Обычный фильтр."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Object"})," - здесь мы можем выбрать для каких объектов базы данных нужно выполнять обслуживание.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Tables and Views"})," - все объекты базы."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Tables"})," - таблицы базы, можно указать все или выбрать конкретные."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Views"})," - представления базы, можно указать все или выбрать конкретные."]})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Compact large objects"})," - освобождение пространства для таблиц и индексов, если возможно."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Index Stats Options"})," - параметры анализа индексов перед обслуживанием. Фактически это режимы просмотра для системной DMV sys.dm_db_index_physical_stats, которые влияют на работу некоторых фильтров и точность результатов анализа. Но зато поверхностный анализ позволяет ускорить запросы перед началом обслуживания. Детальный анализ потребует больше времени и создаст дополнительную нагрузку на сервер.",(0,i.jsxs)(l.aV,{children:[(0,i.jsx)("li",{children:(0,i.jsx)("b",{children:"Fast"})}),(0,i.jsx)("li",{children:(0,i.jsx)("b",{children:"Sampled"})}),(0,i.jsx)("li",{children:(0,i.jsx)("b",{children:"Detailed"})})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Oprimize index only if"})," - дополнительные фильтры для обслуживаемых индексов.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Fragmnetation"})," ",">"," - фрагментация должна быть больше определенного процента. Общепринятым правилом считается, что перестроение нужно выполнять, если фрагментация выше 30%."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Page Count"})," - фильтр по размеру индекса. Указывается в количестве страниц. Каждая страница = 8 КБ."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Used in last"})," - фильтр по размеру индекса. Указывается в количестве страниц. Каждая страница = 8 КБ."]})]})]})]}),(0,i.jsx)(l.xv,{p:!0,children:"Настройки похожи на перестроение. Убраны параметры, которые для реорганизации просто не используются. Например MAXDOP, ведь операция реорганизации не распараллеливается как перестроение."}),(0,i.jsx)(l.xv,{subtitle:!0,className:"mt-10 md:text",children:"Update Statistics Task"}),(0,i.jsx)(l.xv,{p:!0,children:"Компонент обслуживания статистики “Update Statistics task”. Позволяет настроить обслуживание статистики в базе данных."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/5. Update Statistics Task.png",alt:"Update Statistics Task",size:r.h2.MEDIUM}),(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Connection"})," - указываем параметры соединения с базой данных, сервером СУБД. Обычно здесь остается стандартная настройка, останавливаться подробней не будем."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Database(s)"})," - указываем для какой базы (или списка баз) нужно выполнять обслуживание. Обычный фильтр."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Object"})," - здесь мы можем выбрать для каких объектов базы данных нужно выполнять обслуживание.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Tables and Views"})," - все объекты базы."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Tables"})," - таблицы базы, можно указать все или выбрать конкретные."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Views"})," - представления базы, можно указать все или выбрать конкретные."]})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Update"})," - режим обновления объектов статистики.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"All existing statistics"})," - будут обновлены все объекты статистики."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Column statistics only"})," - обновление только статистики столбцов."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Index statictis only"})," - только статистику индексов."]})]})]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Scan type"})," - тип сканирования данных таблицы для актуализации гистограммы распределения значений статистики.",(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Full scan"})," - полное сканирование всех значений."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("b",{children:"Sample by"})," - для анализа будет использован только некоторый процент данных из таблицы, что позволит ускорить процесс обновления, но снизит точность."]})]})]})]}),(0,i.jsx)(l.xv,{p:!0,children:"На скриншоте ниже можно увидеть объекты статистики разных типов. Зеленым обведены объекты статистики, которые связаны с индексами. А объекты статистики с именем “WA_Sys*”, обведенные красным, это как раз служебные статистики столбцов, которые СУБД создает автоматически. Конечно, никто не мешает создать свой объект статистики, если в этом есть необходимость."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/6. Объекты статистики.png",alt:"Объекты статистики",size:r.h2.XS}),(0,i.jsxs)(l.xv,{p:!0,children:["Чаще всего оставляют обновление всех объектов статистики, а не только тех, которые относятся к индексам. Также в абсолютном большинстве случаев достаточно оставить обновление статистики через анализ ограниченной выборки данных. Полное сканирование конечно хорошо, но на больших базах оно может выполняться много часов. Если база небольшая, то можно оставлять и полное сканирование, но нужно учитывать, что обновление статистики таким образом в некоторых случаях может создавать ",(0,i.jsx)("b",{children:(0,i.jsx)("u",{children:(0,i.jsx)(l.e9,{newTab:!0,href:"https://www.brentozar.com/archive/2014/01/update-statistics-the-secret-io-explosion/",children:"проблемы ввода-вывода"})})}),", но опять же для больших баз."]}),(0,i.jsx)(l.xv,{subtitle:!0,className:"mt-10 md:text",children:"Небольшой итог типичного обслуживания"}),(0,i.jsx)(l.xv,{p:!0,children:"Мы пробежались по основным настройкам каждого доступного компонента."}),(0,i.jsx)(l.xv,{p:!0,children:"Предположим, что у нас типичная задача - небольшая база на SQL Server, работ ночью не ведется и в качестве технологического окна у нас время с 21:00 до 06:00. Идеально! Тогда настроим запуск обслуживания как на схеме выше, чередуя операции следующим образом:"}),(0,i.jsxs)(l.aV,{type:r.RH.number,children:[(0,i.jsx)("li",{children:"Перестроение индексов с указанием нужной базы и выбрав все таблицы и представления. При этом не используем онлайн-перестроение, оставляем отключенной сортировку в TempDB и так далее. В общем все настройки стандартные как на скрине выше, разве что MAXDOP можно поставить максимальный, пусть все ресурсы сервера будут выделены под перестроение."}),(0,i.jsx)("li",{children:"Вторым шагом реорганизация индексов. Также оставляем все настройки по умолчанию. Реорганизацию оставляем именно вторым шагом, т.к. в первую очередь нужно выполнить обслуживание индексов, у которых фрагментация выше 30%."}),(0,i.jsx)("li",{children:"И последней операцией устанавливаем обновление статистики. Пусть выполняется для всех объектов статистики и методом полного сканирования."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Также рекомендую добавить еще один субплан обслуживания для обновления статистики в дневное время, чтобы сгладить изменения в базе и помочь оптимизатору запросов актуальной статистикой. Например, установить запуск операции ежедневно в 13:00 (например, сориентироваться на обеденное время сотрудников). Настройки такие же, как и у обновления статистики в ночное время."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/7. Задача обновления статистики.png",alt:"Задача обновления статистики",size:r.h2.XS}),(0,i.jsx)(l.xv,{p:!0,children:"Так как база небольшая, то, скорее всего, весь процесс обслуживания завершится за 30-60 минут ночью и за 5-15 минут днем, а может и еще быстрее."}),(0,i.jsx)(l.xv,{p:!0,children:"Плюсы:"}),(0,i.jsx)(l.aV,{children:(0,i.jsx)("li",{children:"Простота настройки"})}),(0,i.jsx)(l.xv,{p:!0,children:"Минусы:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsx)("li",{children:"Отсутствие контроля выполнения"}),(0,i.jsx)("li",{children:"Блокирование работы запросов в момент обслуживания"}),(0,i.jsx)("li",{children:"Нет возможности проанализировать результаты выполнения обслуживания в динамике, нет истории работы обслуживания"})]}),(0,i.jsxs)(l.xv,{p:!0,children:["Но если база небольшая, то все перечисленные минусы несущественны. Что такое небольшая база? Понятие относительное ",":)",". Главное, что нужно понять, так это если такое обслуживание Вас полностью устраивает, то делать что-то более сложное нет смысла."]}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Первые проблемы"}),(0,i.jsx)(l.xv,{p:!0,children:"Какое-то время все шло хорошо, но от бизнеса появилось новое требование: в ночное время обслуживание не должно мешать работе информационной системы. Например, могли появиться важные регламентные задания по интеграции, расчетам и так далее."}),(0,i.jsx)(l.xv,{p:!0,children:"Выше мы уже говорили, что SQL Server поддерживает онлайн-перестроение индексов и мы можем его использовать для тех объектов, которые это поддерживают. Те объекты, для которых онлайн-перестроение нельзя выполнить из-за использования legacy-типов в полях (text, ntext, image), будут обслужены обычным образом с блокировкой работы с ними. Так что от всех проблем мы не избавимся, но других настроек в стандартном компоненте нет. Поэтому следует выполнить следующие изменения:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:["В шаге перестроения индексов, который выполняется в ночное время, установить использование онлайн перестроения. По сравнению с обычной операцией обслуживания онлайн перестроение требует больше ресурсов по CPU и по использованному месту, да и лог транзакций при полной модели восстановления будет заполнен больше. Такова цена беспрерывной работы запросов.",(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/8. Пример настройки онлайн-перестроения индекса.png",alt:"Пример настройки онлайн-перестроения индекса",size:r.h2.SMALL})]}),(0,i.jsx)("li",{children:"Степень параллелизма желательно установить ограниченным значением, чтобы CPU не был загружен на 100% во время обслуживания. Ведь блокировки не единственная проблема, которая может помешать работе информационной системе. Высокая нагрузка от обслуживания тоже может остановить работу. Общая рекомендация поставить MAXDOP = 30% от общего количества ядер. Например, если на сервере 24 ядра, то под перестроение индексов выделить только 8."}),(0,i.jsx)("li",{children:"Остальные настройки оставляем как есть."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Тут также подведем небольшой итог."}),(0,i.jsx)(l.xv,{p:!0,children:"Плюсы:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsx)("li",{children:"Простота настройки"}),(0,i.jsx)("li",{children:"Минимальное влияние на работу системы во время обслуживания"})]}),(0,i.jsx)(l.xv,{p:!0,children:"Минусы:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsx)("li",{children:"Отсутствие контроля выполнения"}),(0,i.jsx)("li",{children:"Блокирование работы запросов в момент обслуживания для тех объектов, в которых онлайн перестроение невозможно"}),(0,i.jsx)("li",{children:"Нет возможности проанализировать результаты выполнения обслуживания в динамике, нет истории работы обслуживания"})]}),(0,i.jsx)(l.xv,{p:!0,children:"Опять же, если последние 3 причины не критичны, то все отлично!"}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Большой шаг"}),(0,i.jsx)(l.xv,{p:!0,children:"Компания развивается, и информационная база растет. У нас появились большие таблицы и много, а технологическое окно уменьшилось: с 21:00 до 23:00. Появились склады, которые работают 24/7. Кроме этого остается старая проблема с объектами, которые не поддерживают онлайн перестроение. Мы должны их обслуживать так, чтобы они минимально создавали блокировки. Кроме этого, нужно гарантировать, что обслуживание не выйдет за пределы установленного технологического окна с 21:00 до 23:00."}),(0,i.jsxs)(l.xv,{p:!0,children:["К сожалению, стандартными компонентами обслуживания, которыми пользовались до этого момента, данную задачу решить уже нельзя. Поэтому мы пойдем другим путем. Мы создадим служебную базу обслуживания и мониторинга с именем “SQLServerMaintenance”, а далее наполним ее ",(0,i.jsx)("b",{children:(0,i.jsx)("u",{children:(0,i.jsx)(l.e9,{newTab:!0,href:"https://github.com/YPermitin/SQLServerTools/blob/master/SQL-Server-Maintenance/Service-Database/CreateServiceDatabaseScript.sql",children:"объектами следующим скриптом."})})})]}),(0,i.jsxs)(l.xv,{p:!0,children:[(0,i.jsx)("b",{children:(0,i.jsx)("u",{children:(0,i.jsx)(l.e9,{newTab:!0,href:"https://github.com/YPermitin/SQLServerTools/tree/master/SQL-Server-Maintenance/Service-Database",children:"Этот скрипт взят отсюда."})})})," Там же есть примеры использования, описания процедур и их параметров, а также другая связанная информация. Для актуальной версии следите за обновлениями. Также никто не мешает Вам дорабатывать эти скрипты для себя."]}),(0,i.jsx)(l.xv,{p:!0,children:"Инструмент готов, а теперь нужно заменить компоненты обслуживания на свои скрипты. И вот как это будет выглядеть."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/9. Продвинутое обслуживание.png",alt:"Продвинутое обслуживание",size:r.h2.XS}),(0,i.jsx)(l.xv,{p:!0,children:"Вместо трех шагов теперь только 2, в каждом свои скрипты для выполнения операций. На первом шаге используем такой скрипт:"}),(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_IndexMaintenance] \n   @databaseName = 'BSL-ORIG'\n   -- Разрешаем запуск скрипта с 21:00:00 до 22:30:00\n  ,@timeFrom = '21:00:00'\n  ,@timeTo = '22:30:00'\n  -- 1 - обслуживать только те объекты, которые поддерживают онлайн-перестроение\n  ,@useOnlineIndexRebuild = 1\n  -- Процент фрагментации, с которого будет выполняться обслуживание\n  ,@fragmentationPercentMinForMaintenance = 10\n  -- Процент фрагментации с которого начинается полное перестроение.\n  -- Все, что между 10 и 30 будет обслуживаться операцией реорганизации\n  ,@fragmentationPercentForRebuild = 30\n  -- Степень параллелизма для операций перестроения оставляем равной 8\n  ,@maxDop = 8\n  -- Настраиваем поведение онлайн-перестроения в ситуациях, когда переключение индекса на новый блокируется\n  -- другими запросами\n  -- 1 - операция обслуживания завершит себя по истечении таймаута ожидания.\n  ,@onlineRebuildAbortAfterWaitMode = 1\n  -- Время ожидания операции онлайн перестроения перед прерыванием работы. Ставим 15 минут\n  ,@onlineRebuildWaitMinutes = 15\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"В скрипте мы указываем имя базы, для которой устанавливаем обслуживание и диапазон времени, в который можно выполнять операции обслуживания."}),(0,i.jsx)(l.xv,{p:!0,children:"Кроме этого указываем, что нужно обслуживать только те объекты, которые поддерживают онлайн перестроение (параметр @useOnlineIndexRebuild). Также устанавливаем, что обслуживание нужно начинать только с 10% фрагментацией (@fragmentationPercentMinForMaintenance), а полное перестроение только при 30% значении фрагментации индекса (@fragmentationPercentForRebuild). Таким образом, реорганизация индекса будет применяться, если фрагментация находится в диапазоне между 10% и 30%."}),(0,i.jsx)(l.xv,{p:!0,children:"Дополнительно к этому установим особые параметры онлайн обслуживания:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsx)("li",{children:"При блокировании обслуживания другими запросами отдаем приоритет именно им. То есть по истечении таймаута операция обслуживания завершит сама себя (@onlineRebuildAbortAfterWaitMode)."}),(0,i.jsx)("li",{children:"Время ожидания при этом установим в 15 минут (@onlineRebuildAbortAfterWaitMode)."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Это должно решить все перечисленные выше задачи."}),(0,i.jsx)(l.xv,{p:!0,children:"Для обслуживания статистики будем использовать следующий скрипт."}),(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_StatisticMaintenance] \n   @databaseName = 'BSL-ORIG'\n  ,@timeFrom = '21:00:00'\n  ,@timeTo = '22:30:00'\n  -- 0 устанавливаем режим анализа выборки данных, \n  -- 1 - режим полного сканирования\n  ,@mode = 1\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Также указываем время работы скрипта и режим полного сканирования."}),(0,i.jsx)(l.xv,{p:!0,children:"На первом шаге мы обязательно установим таймаут выполнения операции в 2 часа. Это соотносится с указанным в настройках диапазоном времени с 21:00 до 22:30 (1.5 часа). Таймаут в 2 часа это последний рубеж защиты, чтобы процедуры обслуживания не вышли за 23:00. Такое может произойти, если индекс начал операцию перестроения или реорганизации в 22:20 и к 23:00 не завершился, то таймаут выполнения команды ее прервет “насильно”."}),(0,i.jsx)(l.xv,{p:!0,children:"При этом для операции обновления статистики таймаут выполнения мы не ставим, т.к. она не мешает работе других запросов. При этом если обслуживание индексов работало до 23:00 (с таймаутом или без), то обслуживание статистик не будет запущено. Считаем это проблемными ситуациями и они не должны возникать часто."}),(0,i.jsx)(l.xv,{p:!0,children:"Также добавим дополнительный субплан для обслуживания индексов, которые не поддерживают онлайн перестроение. Считаем, что таких объектов не много и их можно обслуживать раз в неделю. Для этого добавим субплан с запуском раз в неделю, например в субботу в 23:00 и отдаем на работу скрипта 30 минут. Скрипт будет таким. Заменяем параметр “@useOnlineIndexRebuild” и убираем настройки, связанные с онлайн перестроением."}),(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_IndexMaintenance] \n   @databaseName = 'BSL-ORIG'\n   -- Разрешаем запуск скрипта с 23:00:00 до 23:30:00\n  ,@timeFrom = '23:00:00'\n  ,@timeTo = '23:30:00'\n  -- (2) - обслуживание только тех объектов, в которых онлайн-перестроение не поддерживается.\n  ,@useOnlineIndexRebuild = 2\n  -- Процент фрагментации, с корого будет выполняться обслуживание\n  ,@fragmentationPercentMinForMaintenance = 10\n  -- Процент фрагментации с которого начинается полное перестроение.\n  -- Все, что между 10 и 30 будет обслуживаться операцией реорганизации\n  ,@fragmentationPercentForRebuild = 30\n  -- Степень параллелизма для операций перестроения оставляем равной 8\n  ,@maxDop = 8\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Таймаут для операции установим в 1 час, то есть в 00:00 операция будет завершена в любом случае."}),(0,i.jsx)(l.xv,{p:!0,children:"И последнее изменение - это дополнительные шаги обслуживания статистики. Ранее мы запускали в дневное время отдельное обновление статистики, а теперь будем выполнять это 3 раза (не считая основного ночного обслуживания): в 06:00, 13:00 и в 18:00. Отключаем ограничения времени выполнения и режим обновления теперь выполняем через выборку данных, а не полным сканированием."}),(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_StatisticMaintenance] \n   @databaseName = 'BSL-ORIG'\n  -- 0 устанавливаем режим анализа выборки данных, \n  -- 1 - режим полного сканирования\n  ,@mode = 0\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Так как полное сканирование не используется, то даже для многотеррабайтных баз эта операция будет выполняться за 5-30 минут. Поэтому ограничения выполнения или таймаутов выполнения устанавливать не будем."}),(0,i.jsx)(l.xv,{p:!0,children:"Готово! Небольшие итоги:"}),(0,i.jsx)(l.xv,{p:!0,children:"Плюсы:"}),(0,i.jsxs)(l.aV,{type:r.RH.number,children:[(0,i.jsx)("li",{children:"Минимальное влияние на работу запросов во время обслуживания (как по блокировкам, так и по нагрузке на базу)."}),(0,i.jsx)("li",{children:"Максимально актуальная статистика во время всего рабочего дня."}),(0,i.jsx)("li",{children:"Полный контроль над выполняемыми операциями. Приоритет отдается выполняемым запросам, а не обслуживанию. Работа информационной системы не будет нарушена."}),(0,i.jsx)("li",{children:"Практически полное покрытие задач обслуживания баз данных в большинстве мелких, средних и крупных баз данных."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Минусы:"}),(0,i.jsxs)(l.aV,{type:r.RH.number,children:[(0,i.jsx)("li",{children:"Более сложная схема настройки, требующая понимания работы процессов обслуживания и их сопровождения."}),(0,i.jsx)("li",{children:"Необходимость прочитать инструкции и документацию по SQL Server в нештатных ситуациях."}),(0,i.jsx)("li",{children:"Желательны навыки работы с TSQL."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Может ли потребоваться изменять обслуживание еще как-то?"}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"А вот и полная модель"}),(0,i.jsx)(l.xv,{p:!0,children:"Настает момент, когда для задач отказоустойчивости и надежности базу данных переключают в полную модель восстановления. Это позволяет восстановить базу данных из бэкапа на любой момент времен и не потерять данные в случае внезапного падения."}),(0,i.jsx)(l.xv,{p:!0,children:"Рассматривать шаги для безопасного перевода баз в полную модель мы не будем. Основное что отметим - в таком режиме все изменения сохраняются в лог транзакций и остаются там до тех пор, пока он не будет бэкапирован. Важно заметить, что только бэкап лога транзакций помечает их готовыми к удалению из файла лога. Полный бэкап файл лога транзакций не очистит."}),(0,i.jsx)(l.xv,{p:!0,children:"Но использование полной модели накладывает особенности в работе обслуживания. Может случиться так, что перестроение индексов может заполнить лог транзакций, что остановит все операции модификации данных в базе. Другими словами, информационная система перестанет работать."}),(0,i.jsx)(l.xv,{p:!0,children:"Чтобы этого не случилось - установим ограничения на использование файла логов транзакций. Дополним предыдущий скрипт параметром ограничения. Скрипт тот же, только добавили один параметр в конце."}),(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_IndexMaintenance] \n   @databaseName = 'BSL-ORIG'\n   -- Разрешаем запуск скрипта с 21:00:00 до 22:30:00\n  ,@timeFrom = '21:00:00'\n  ,@timeTo = '22:30:00'\n  -- 1 - обслуживать только те объекты, которые поддерживают онлайн-перестроение\n  ,@useOnlineIndexRebuild = 1\n  -- Процент фрагментации, с которого будет выполняться обслуживание\n  ,@fragmentationPercentMinForMaintenance = 10\n  -- Процент фрагментации с которого начинается полное перестроение.\n  -- Все, что между 10 и 30 будет обслуживаться операцией реорганизации\n  ,@fragmentationPercentForRebuild = 30\n  -- Степень параллелизма для операций перестроения оставляем равной 8\n  ,@maxDop = 8\n  -- Настраиваем поведение онлайн-перестроения в ситуациях, когда переключение индекса на новый блокируется\n  -- другими запросами\n  -- 1 - операция обслуживания завершит себя по истечении таймаута ожидания.\n  ,@onlineRebuildAbortAfterWaitMode = 1\n  -- Время ожидания операции онлайн перестроения перед прерываниеем работы. Ставим 15 минут\n  ,@onlineRebuildWaitMinutes = 15\n  -- !!!\n  -- Разрешаем использование только 50% файла лога транзакций.\n  -- Если лог транзакций заполнен на больший процент, то новые объекты обслуживаться не будут\n  ,@maxTransactionLogSizeUsagePercent = 50\n  -- Можно также установить ограничение явно в мегабайтах\n  --,@maxTransactionLogSizeMB bigint = 0\n  -- !!!\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Параметры @maxTransactionLogSizeUsagePercent и @maxTransactionLogSizeMB как раз и решают эту задачу. Но нужно учитывать, что проверка выполняется перед началом выполнения операции обслуживания. Если индекс начал перестраиваться, то ограничение на текущий процесс уже не повлияет. Поэтому также рекомендуется спланировать резерв места на диске с файлом лога транзакций. А если, мало ли, размер логов при перестроении может превысить 2 ТБ, то нужно создать несколько файлов логов транзакций, чтобы обойти это ограничение. Да, максимальный размер одного файла лога транзакций равен 2 ТБ."}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Разделяй и властвуй"}),(0,i.jsx)(l.xv,{p:!0,children:"В некоторых случаях есть смысл большие индексы обслуживать не ежедневно, а раз в неделю и, например, только полным перестроением. Для этого внесем следующие изменения:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:["В ежедневном плане обслуживания индексов установим условие на максимальный размер обслуживаемых объектов. Расписание установим с понедельника по субботу. Можно установить нижнюю (@maxIndexSizePages) и верхнюю (@maxIndexSizePages) границу. В примере мы ставим условие только на макс. размер объекта. В скрипте ниже объекты размером 100 ГБ обслуживаться не будут.",(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_IndexMaintenance] \n   @databaseName = 'BSL-ORIG'\n   -- Разрешаем запуск скрипта с 21:00:00 до 22:30:00\n  ,@timeFrom = '21:00:00'\n  ,@timeTo = '22:30:00'\n  -- 1 - обслуживать только те объекты, которые поддерживают онлайн-перестроение\n  ,@useOnlineIndexRebuild = 1\n  -- Процент фрагментации, с которого будет выполняться обслуживание\n  ,@fragmentationPercentMinForMaintenance = 10\n  -- Процент фрагментации с которого начинается полное перестроение.\n  -- Все, что между 10 и 30 будет обслуживаться операцией реорганизации\n  ,@fragmentationPercentForRebuild = 30\n  -- Степень параллелизма для операций перестроения оставляем равной 8\n  ,@maxDop = 8\n  -- Настраиваем поведение онлайн-перестроения в ситуациях, когда переключение индекса на новый блокируется\n  -- другими запросами\n  -- 1 - операция обслуживания завершит себя по истечении таймаута ожидания.\n  ,@onlineRebuildAbortAfterWaitMode = 1\n  -- Время ожидания операции онлайн перестроения перед прерыванием работы. Ставим 15 минут\n  ,@onlineRebuildWaitMinutes = 15\n  -- !!!\n  -- Разрешаем использование только 50% файла лога транзакций.\n  -- Если лог транзакций заполнен на больший процент, то новые объекты обслуживаться не будут\n  ,@maxTransactionLogSizeUsagePercent = 50\n  -- Макс. размер обслуживаемых объектов будет равен 50 ГБ.\n  -- Размер устанавливается в количестве страниц по 8 КБ.\n  -- 50 ГБ = 6553600 страниц\n  ,@maxIndexSizePages = 6553600\n                        ",className:"my-5",language:"sql"})]}),(0,i.jsx)("li",{children:"Добавим еще один субплан обслуживания с теми же операциями, что и в ежедневном плане обслуживания, но в скрипте обслуживания индексов снимем ограничение на макс. размер индекса."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Это позволит разделить обслуживание и избавится от массивных операций изменения в будние дни. Тут стоит отметить, что нужно понимать последствия таких решений. Предварительно нужно проанализировать что это за таблицы и как изменение стратегии обслуживания повлияет на работу информационной системы."}),(0,i.jsx)(l.xv,{p:!0,children:"Есть и более точечный вариант настройки обслуживания, в котором ограничения будут опираться не на размер объектов, а на конкретные объекты. Например, можно добавить такое условие в процедуру обслуживания индексов:"}),(0,i.jsx)(a.Z,{code:"\n  -- Отбор по конкретной таблице\n  ,@ConditionTableName = 'IN (''_AccumRg1265'',''_AccumRg505'')'\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"или даже поставить отбор на конкретный индекс:"}),(0,i.jsx)(a.Z,{code:"\n  -- Отбор на конкретный индекс (отбор по таблице в этом случае не обязателен)\n  ,@ConditionIndexName = '= ''_AccumRg505_1'''\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Для таких точечных операций обслуживания можно задать свое расписание, свои таймауты выполнения и так далее."}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Слишком большие объекты"}),(0,i.jsx)(l.xv,{p:!0,children:"Следующая проблема, которая может появиться в больших базах - это обслуживание ооооооочень больших, огромных объектов в пределах окна обслуживания. Например, у нас есть 2 часа на обслуживание индексов. Но что, если для перестроения индекса, размер которого 1 ТБ, нужно 5 часов."}),(0,i.jsx)(l.xv,{p:!0,children:"Конечно, в онлайн режиме блокировок это не создаст, но замедление работы с индексом или выделяемые ресурсы для такого перестроения могут косвенно влиять на другие запросы. Кроме этого, файл лога транзакций будет заполняться полностью и даже дополнительные файлы могут не спасти ситуацию."}),(0,i.jsx)(l.xv,{p:!0,children:"Тут на помощь приходят возобновляемые операции перестроения индексов, доступных со SQL Server 2017. Работает это так:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:["Вы запускаете операцию перестроения индекса в онлайн режиме, указав параметр RESUMABLE = ON.",(0,i.jsx)(a.Z,{code:"\nALTER INDEX PK_1 \nON [dbo].[_Acc1]\nREBUILD\nWITH (ONLINE = ON, RESUMABLE = ON);\nGO\n                        ",className:"my-5",language:"sql"})]}),(0,i.jsxs)("li",{children:["Процесс перестроения выполняется, пока Вы не прервете его явно командой завершения сессии (например, если таймаут сработал) или не указав остановку явно.",(0,i.jsx)(a.Z,{code:"\nALTER INDEX PK_1 ON [dbo].[_Acc1]  PAUSE\n                        ",className:"my-5",language:"sql"})]}),(0,i.jsx)("li",{children:"После остановки операции файл журнала транзакций может быть освобожден после выполнения бэкапа логов. Да, перестроение индекса еще не завершено, но освободить файл журнала транзакций можно."}),(0,i.jsxs)("li",{children:["Можно проверить список операций перестроения, доступных для продолжения, а также состояние прогресса перестроения",(0,i.jsx)(a.Z,{code:"\nSELECT \n  total_execution_time, \n  percent_complete, \n  name,\n  state_desc,\n  last_pause_time,\n  page_count\nFROM sys.index_resumable_operations;\n                        ",className:"my-5",language:"sql"})]}),(0,i.jsxs)("li",{children:["Возобновляем операцию перестроения при необходимости. Например, в следующем технологическом окне обслуживания.",(0,i.jsx)(a.Z,{code:"\nALTER INDEX PK_1 ON [dbo].[_Acc1]  RESUME\n                        ",className:"my-5",language:"sql"})]}),(0,i.jsxs)("li",{children:["Или можно прервать операцию окончательно.",(0,i.jsx)(a.Z,{code:"\nALTER INDEX PK_1 ON [dbo].[_Acc1]  ABORT\n                        ",className:"my-5",language:"sql"})]})]}),(0,i.jsx)(l.xv,{p:!0,children:"Это позволит выполнять даже самые тяжелые операции в заданное окно обслуживания, хоть и за несколько дней. А также обезопасить себя от переполнения лога транзакций."}),(0,i.jsx)(l.xv,{p:!0,children:"В контексте нашей служебной базы использование возобновляемого перестроения включается через параметр @useResumableIndexRebuildIfAvailable, который может быть задействован только при использовании операций онлайн перестроения индексов. В примере ниже мы поставим отбор для конкретного индекса, по которому нужно выполнять возобновляемое перестроение. Использовать подобное обслуживание для всех объектов в базе не имеет смысла. Последние два параметра тут основные для примера."}),(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_IndexMaintenance] \n   @databaseName = 'BSL-ORIG'\n   -- Разрешаем запуск скрипта с 21:00:00 до 22:30:00\n  ,@timeFrom = '21:00:00'\n  ,@timeTo = '22:30:00'\n  -- (2) - обслуживание только тех объектов, в которых онлайн-перестроение не поддерживается.\n  ,@useOnlineIndexRebuild = 2\n  -- Процент фрагментации, с которого будет выполняться обслуживание\n  ,@fragmentationPercentMinForMaintenance = 10\n  -- Процент фрагментации с которого начинается полное перестроение.\n  -- Все, что между 10 и 30 будет обслуживаться операцией реорганизации\n  ,@fragmentationPercentForRebuild = 30\n  -- Степень параллелизма для операций перестроения оставляем равной 8\n  ,@maxDop = 8\n  -- Включаем возобновляемое перестроение индексов\n  ,@useResumableIndexRebuildIfAvailable = 1\n  -- И только для конкретного индекса\n  ,@ConditionIndexName = '= ''_AccumRg505_1'''\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Но есть и подводный камень! Если индекс находится в списке операций возобновляемых операций перестроения, то его нельзя удалить или перестроить другими операциями. Нужно либо завершить перестроение, либо прервать его окончательно."}),(0,i.jsx)(l.xv,{p:!0,children:"Если во время работы скрипта из примера операция будет прервана по таймауту (или вручную), то при следующем запуске этого же скрипта будет действовать такой алгоритм:"}),(0,i.jsxs)(l.aV,{type:r.RH.number,children:[(0,i.jsx)("li",{children:"Проверяются списки объектов, для которых нужно выполнить возобновление перестроения. При этом учитываются условия по таблицам и индексам."}),(0,i.jsx)("li",{children:"Если такая операция есть в списке, то возобновляем ее работу. Если нет, то идем дальше."}),(0,i.jsx)("li",{children:"Далее выполняем обычные операции обслуживания. При этом если на прошлом шаге было завершено возобновляемое перестроение индекса, то на следующих шагах обслуживания эти объекты будут пропущены. Это сделано для того, чтобы один и тот же объект не был перестроен дважды."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Этот механизм является спасительным для многих больших баз данных. А некоторые люди еще говорят, что разницы между SQL Server 2012 и SQL Server 2019 нет, вот им пример :)"}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Да здравствует AlwaysOn"}),(0,i.jsx)(l.xv,{p:!0,children:"При включении групп высокой доступности AlwaysOn появляется особый нюанс - если реплика становится недоступной для отправки изменений, то записи в файле лога транзакций не будут удалены даже после выполнения бэкапа лога транзакций. Это сделано для того, чтобы при возобновлении передачи данных не потерять транзакции, которые еще не ушли на копии баз, реплики."}),(0,i.jsx)(l.xv,{p:!0,children:"Для обслуживания это может означать, что при каких-то авариях с передачей данных в AlwaysOn лучше повременить с обслуживанием, пока передача данных не будет восстановлена и файл лога транзакций не будет освобождён."}),(0,i.jsx)(l.xv,{p:!0,children:"Подобная ситуация может возникнуть не только при сбое связи, а, например, если после перестроения 1 ТБ индекса эти изменения будут отправляться на копии. Пока все изменения после перестроения не “уйдут” на копии, то лог транзакций также не сможет быть освобожден."}),(0,i.jsx)(l.xv,{p:!0,children:"Но на самом деле решение этой проблемы у нас уже есть. Выше мы уже говорили про параметры ограничения файла лога транзакций в полной модели восстановления, а также кратко прошлись по созданию резерва для логов. Этот же подход нужно использовать и в нашем случае."}),(0,i.jsx)(l.xv,{p:!0,children:"Также нужно понимать, что операции обслуживания нужно выполнять только в первичном узле (основной базе), а на копиях баз настраивать обслуживание просто нет смысла. Это же копии в режиме “только для чтения”. Перестроение индексов или обновление статистик там недоступно."}),(0,i.jsxs)(l.xv,{p:!0,children:["Информацию про использование AlwaysOn ",(0,i.jsx)("b",{children:(0,i.jsx)("u",{children:(0,i.jsx)(l.e9,{newTab:!0,href:"https://github.com/YPermitin/SQLServerTools/tree/master/SQL-Server-AlwaysOn",children:"Вы можете посмотреть здесь"})})}),", в том числе описание некоторых нюансов и настроек."]}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Комбо!"}),(0,i.jsx)(l.xv,{p:!0,children:"И напоследок - комбо! Все вышеописанные подходы к настройке можно комбинировать как Вам угодно, главное не делать это вслепую! И лучше всего усложнять обслуживание только по необходимости, подтверждая свои шаги через анализ логов обслуживания."}),(0,i.jsx)(l.xv,{p:!0,children:"Если Вы будете использовать служебную базу, о конторой идет речь в этой статье, то все операции перестроения индексов или обновления объектов статистики логируются. Например, в таблице “MaintenanceActionsLog” можно посмотреть когда, как и почему объект обслуживался."}),(0,i.jsx)(l.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2022-05/few-steps-to-serious-maintenance/10. История обслуживания объектов.png",alt:"История обслуживания объектов",size:r.h2.MEDIUM}),(0,i.jsx)(l.xv,{p:!0,children:"Вы будете знать обслуживался ли он онлайн, было это перестроение или реорганизация, какой процент фрагментации был на момент обслуживания, сколько записей изменилось с момента обновления статистики, какая SQL-команда использовалась, длительность операции и вообще завершилась ли операция. Операция обслуживания будет взята под полный контроль!"}),(0,i.jsx)(l.xv,{p:!0,children:"Также может возникнуть необходимость запускать скрипты перестроения индексов параллельно друг другу, для ускорения обслуживания, например. Но тут возникает нюанс! Если есть активная операция перестроения индекса, то DMV sys.dm_db_index_physical_stats не сможет получить текущее состояние индексов, пока перестроение не будет завершено. В итоге операции перестроения параллельно и не будут запущены. Но и тут есть выход!"}),(0,i.jsx)(l.xv,{p:!0,children:"Вы можете запустить сбор информации о состоянии объектов базы данных заранее через команду:"}),(0,i.jsx)(a.Z,{code:"\nEXECUTE [SQLServerMaintenance].[dbo].[sp_FillDatabaseObjectsState] \n   @databaseName = 'BSL-ORIG'\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Команда вызовет sys.dm_db_index_physical_stats и сохранит результаты в таблицу “DatabaseObjectsState”. А в скриптах перестроения индексов можно указать параметр @usePreparedInformationAboutObjectsStateIfExists, тогда повторного анализа объектов выполнено не будет и обслуживание будет использовать информацию из таблицы “DatabaseObjectsState”."}),(0,i.jsx)(a.Z,{code:"\n-- Используем ранее сохраненную информацию о состоянии объектов базы данных\n,@usePreparedInformationAboutObjectsStateIfExists = 1\n                ",className:"my-5",language:"sql"}),(0,i.jsx)(l.xv,{p:!0,children:"Но есть нюанс! Информация об объектах базы должна быть собрана в последние 12 часов на момент вызова обслуживания. Иначе информация будет считаться устаревшей и запустится обычный анализ объектов."}),(0,i.jsx)(l.xv,{p:!0,children:"Таким образом, можно запускать 2 и более процессов обслуживания индексов, не опасаясь их блокировки друг другом на этапе анализа объектов базы."}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Как отслеживать качество обслуживания"}),(0,i.jsx)(l.xv,{p:!0,children:"Это отдельная тема, но в самом простом виде можно действовать так:"}),(0,i.jsxs)(l.aV,{children:[(0,i.jsxs)("li",{children:["Следить, чтобы статистика была максимально актуальной. Например, таким скриптом. Так вы увидите есть ли объекты, по которым статистика давно не обновлялась, а также объекты, по которым изменения накапливаются очень быстро. Возможно, нужно делать обновление статистики для них чаще нескольких раз в день.",(0,i.jsx)(a.Z,{code:"\nselect\n    o.name AS [TableName],\n    a.name AS [StatName],\n    a.rowmodctr AS [RowsChanged],\n    STATS_DATE(s.object_id, s.stats_id) AS [LastUpdate],\n    o.is_ms_shipped,\n    s.is_temporary,\n    p.*\nfrom sys.sysindexes a\n    inner join sys.objects o\n    on a.id = o.object_id\n        and o.type = 'U'\n        and a.id > 100\n        and a.indid > 0\n    left join sys.stats s\n    on a.name = s.name\n    left join (\nSELECT\n        p.[object_id]\n, p.index_id\n, total_pages = SUM(a.total_pages)\n    FROM sys.partitions p WITH(NOLOCK)\n        JOIN sys.allocation_units a WITH(NOLOCK) ON p.[partition_id] = a.container_id\n    GROUP BY \np.[object_id]\n, p.index_id\n) p ON o.[object_id] = p.[object_id] AND p.index_id = s.stats_id\norder by\n    a.rowmodctr desc,\n    STATS_DATE(s.object_id, s.stats_id) ASC\n                        ",className:"my-5",language:"sql"})]}),(0,i.jsxs)("li",{children:["Следить за фрагментацией индексов. Можно использовать уровень детализации “DETAILED” для более точных данных.",(0,i.jsx)(a.Z,{code:"\nSELECT OBJECT_NAME(ips.OBJECT_ID)\n ,i.NAME\n ,ips.index_id\n ,index_type_desc\n ,avg_fragmentation_in_percent\n ,avg_page_space_used_in_percent\n ,page_count\nFROM sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, 'SAMPLED') ips\nINNER JOIN sys.indexes i ON (ips.object_id = i.object_id)\n AND (ips.index_id = i.index_id)\nORDER BY avg_fragmentation_in_percent DESC\n                        ",className:"my-5",language:"sql"})]})]}),(0,i.jsx)(l.xv,{p:!0,children:"Плюс тяжелые запросы с неоптимальными планами могут подсказать, какие таблицы являются проблемными. Скриптами выше проверьте их состояние."}),(0,i.jsx)(l.xv,{p:!0,children:"Но в целом это отдельный разговор. Сегодня об этом речь не идет."}),(0,i.jsx)(l.xv,{title:!0,className:"mt-10 md:text",children:"Это еще не конец"}),(0,i.jsx)(l.xv,{p:!0,children:"Мы прошли долгий путь и каждый шаг дался нам не просто:"}),(0,i.jsxs)(l.aV,{type:r.RH.number,children:[(0,i.jsx)("li",{children:"Сначала настроили базовое обслуживание с помощью поставляемых компонентов SQL Server."}),(0,i.jsx)("li",{children:"Затем усложнили обслуживание для уменьшения влияния на информационную систему."}),(0,i.jsx)("li",{children:"После вынужденно отказались от штатных компонентов и использовали свои скрипты и наработки, поставили ограничения на операции обслуживания, повысили надежность работы и пресекли выход за рамки технологического окна. А также улучшили онлайн обслуживание индексов."}),(0,i.jsx)("li",{children:"Далее рассмотрели нюансы при работе в полной модели восстановления базы."}),(0,i.jsx)("li",{children:"Разбили обслуживание на регулярное и еженедельное для оптимизации работы."}),(0,i.jsx)("li",{children:"Изменили стратегию обслуживания для огромных объектов, внедрив возобновляемое перестроение индексов."}),(0,i.jsx)("li",{children:"Рассмотрели особенности обслуживания при использовании AlwaysOn."}),(0,i.jsx)("li",{children:"И напоследок обсудили логирование и контроль обслуживания."})]}),(0,i.jsx)(l.xv,{p:!0,children:"Но это не конец пути! Все это лишь показывает, что обслуживание баз данных может адаптироваться под любые требования, было бы желание, деньги и время. Ну и знания, конечно же. Надеюсь, в последнем эта статья поможет и даст старт для изучения вопроса."}),(0,i.jsx)(l.xv,{p:!0,children:"Желаю создать свой идеальный план и стратегию обслуживания!"}),(0,i.jsx)(l.xv,{p:!0,children:"А эта статья должна в этом помочь."})]})},850:function(e,n,s){"use strict";s.d(n,{Z:function(){return x}});var i=s(5893),l=s(7294),a=s(4965),r=s(4275),c=s(7340);function d(){let e=(0,c._)(["\n  text-align: left;\n  overflow: hidden;\n  font-size: 14px;\n  border-radius: 6px;\n  overflow: auto;\n  max-height: 350px;\n\n  & .token-line {\n    line-height: 1.3em;\n    height: 1.3em;\n  }\n"]);return d=function(){return e},e}let t=s(964).ZP.pre(d());var x=e=>{let{code:n,className:c,language:d}=e;return(void 0!==s.g?s.g:window).Prism=a.p1,s(1354),s(9016),s(5266),s(2927),s(1315),s(7874),s(6862),(0,i.jsx)("div",{className:(0,r.GF)("bg-blue-500 md:p-5 p-2",c),children:(0,i.jsx)("div",{className:"shadow-lg",children:(0,i.jsx)(a.y$,{theme:a.np.vsDark,code:n,language:null!=d?d:d="tsx",children:e=>{let{className:n,style:s,tokens:a,getLineProps:r,getTokenProps:c}=e;return(0,i.jsx)(t,{className:n,style:s,children:a.map((e,n)=>(0,l.createElement)("div",{...r({line:e,key:n}),key:Math.random()},e.map((e,n)=>(0,l.createElement)("span",{...c({token:e,key:n}),key:Math.random()}))))})}})})})}},9305:function(e,n,s){"use strict";s.d(n,{Ee:function(){return c},Xg:function(){return a},Y7:function(){return h},aV:function(){return t},e9:function(){return x},o_:function(){return j},ty:function(){return d},xv:function(){return r}});var i=s(5152),l=s.n(i);let a=l()(()=>Promise.all([s.e(4838),s.e(4738),s.e(1664),s.e(7167)]).then(s.bind(s,7167)),{loadableGenerated:{webpack:()=>[7167]}}),r=l()(()=>s.e(9179).then(s.bind(s,9179)),{loadableGenerated:{webpack:()=>[9179]}}),c=l()(()=>s.e(1974).then(s.bind(s,1974)),{loadableGenerated:{webpack:()=>[1974]}}),d=l()(()=>s.e(8547).then(s.bind(s,8547)),{loadableGenerated:{webpack:()=>[8547]}}),t=l()(()=>s.e(6806).then(s.bind(s,6806)),{loadableGenerated:{webpack:()=>[6806]}}),x=l()(()=>Promise.all([s.e(1664),s.e(1465)]).then(s.bind(s,1465)),{loadableGenerated:{webpack:()=>[1465]}});l()(()=>s.e(567).then(s.bind(s,567)),{loadableGenerated:{webpack:()=>[567]}});let h=l()(()=>Promise.all([s.e(2004),s.e(4139)]).then(s.bind(s,4139)),{loadableGenerated:{webpack:()=>[4139]}}),j=l()(()=>Promise.all([s.e(3811),s.e(7472),s.e(584),s.e(7870)]).then(s.bind(s,7870)),{loadableGenerated:{webpack:()=>[7870]}})}},function(e){e.O(0,[1102,2888,9774,179],function(){return e(e.s=7405)}),_N_E=e.O()}]);