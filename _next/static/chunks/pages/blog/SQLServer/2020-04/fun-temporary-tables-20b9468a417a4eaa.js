(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8274],{6783:function(n,e,_){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/SQLServer/2020-04/fun-temporary-tables",function(){return _(3870)}])},3870:function(n,e,_){"use strict";_.r(e);var s=_(5893),t=_(9305);_(7294);var l=_(1639),d=_(8754),c=_(5632),i=_(3906),a=_(6789),r=_(1652),x=_(850),m=_(7105);e.default=()=>(0,s.jsxs)(t.Xg,{blogcentered:!0,children:[(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Мы все их используем"}),(0,s.jsx)(t.xv,{p:!0,children:"Не важно - новичок Вы или опытный разработчик. Если когда-либо в работе приходилось создавать запросы, то с высокой долей вероятности в них хотя бы раз были использованы временные таблицы. Тот же экзамен “1С:Специалист по платформе” фактически требует их использования при решении задач на экзамене. Сегодня речь будет идти, внезапно, как-раз о временных таблицах и работе платформы 1С с ними."}),(0,s.jsx)(t.xv,{p:!0,children:"Мы начнем с простых примеров работы с временными таблицами и действиями платформы на стороне СУБД. А закончим чем-то очень странным и неожиданным."}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Примитивный пример"}),(0,s.jsx)(t.xv,{p:!0,children:"Временные таблицы рекомендуется использовать для создания стабильных и производительных запросов. В тексте запросов их создание выполняется с помощью ключевого слова “ПОМЕСТИТЬ” для пакета запроса."}),(0,s.jsx)(x.Z,{code:"\nВЫБРАТЬ ПЕРВЫЕ 100\n	Номенклатура.Ссылка КАК Ссылка,\n	Номенклатура.Наименование КАК Наименование\nПОМЕСТИТЬ ВТ_Номенклатура\nИЗ\n	Справочник.Номенклатура КАК Номенклатура\n;\n\n////////////////////////////////////////////////////////////////////////////////\nВЫБРАТЬ\n	ВТ_Номенклатура.Ссылка КАК Ссылка,\n	ВТ_Номенклатура.Наименование КАК Наименование\nИЗ                              \n	ВТ_Номенклатура КАК ВТ_Номенклатура\n                ",className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Здесь в первом пакете запросов мы выбрали первые 100 элементов справочника “Номенклатура” и поместили их во временную таблицу “ВТ_Номенклатура”. После чего во втором пакете мы получили данные из ранее созданной временной таблицы и вернули их как результат выборки. Все просто, не так ли?"}),(0,s.jsx)(t.xv,{p:!0,children:"Если взглянуть на происходящее на стороне СУБД, то мы увидим следующую серию запросов."}),(0,s.jsx)(x.Z,{code:"\n-- Проверка существует ли временная таблица с указанным именем\nSELECT \n    1 \nWHERE OBJECT_ID('tempdb..#tt36') IS NOT NULL					\n\n-- Создание временной таблицы с зарезервированным именем и необходимой структурой\nCREATE TABLE #tt36 (\n    _Q_000_F_000RRef BINARY(16), \n    _Q_000_F_001 NVARCHAR(100) COLLATE DATABASE_DEFAULT\n)					\n\n-- Выполнение 1 пакета запроса для заполнения временной таблицы\nINSERT INTO #tt36 WITH(TABLOCK) (_Q_000_F_000RRef, _Q_000_F_001) SELECT TOP 100\n    T1._IDRRef,\n    T1._Description\nFROM dbo._Reference85 T1\nWHERE (T1._Fld774 = @P1) -- Неявный отбор по разделителю данных\n\n-- Получение данных из временной таблицы для результата запроса\nSELECT\n    T1._Q_000_F_000RRef,\n    T1._Q_000_F_001\nFROM #tt36 T1 WITH(NOLOCK)					\n\n-- Очистка временной таблицы\nTRUNCATE TABLE #tt36	\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"Тоже все относительно просто. Платформа 1С выполняет ряд простых шагов:"}),(0,s.jsxs)(t.aV,{children:[(0,s.jsx)("li",{children:"Проверка наличия временной таблицы с зарезервированным именем. Если существует, то будет удалена."}),(0,s.jsx)("li",{children:"Создание временной таблицы."}),(0,s.jsx)("li",{children:"Далее выполняет запрос из первого пакета для наполнения данных ранее созданной временной таблицы."}),(0,s.jsx)("li",{children:"Вторым запросом получает данные из временной таблицы для результата выборки."}),(0,s.jsx)("li",{children:"Очищает данные временной таблицы."})]}),(0,s.jsx)(t.xv,{p:!0,children:"В нашем случае последней операцией является очистка временной таблицы, причем платформа делает это автоматически. Так происходит, потому что запрос был окончательно выполнен и за ним можно освободить ресурсы. Очистку данных временной таблицы также можно добавить явно указав инструкции в запросе:"}),(0,s.jsx)(x.Z,{code:"\n;\n\n////////////////////////////////////////////////////////////////////////////////\nУНИЧТОЖИТЬ ВТ_Номенклатура	\n                ",className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Всегда ли платформа действует по таким правилам? Нет. Например, если выполнить этот же запрос еще раз, то количество выполняемых SQL-запросов будет меньше."}),(0,s.jsx)(x.Z,{code:"\n-- Выполнение 1 пакета запроса для заполнения временной таблицы\nINSERT INTO #tt36 WITH(TABLOCK) (_Q_000_F_000RRef, _Q_000_F_001) SELECT TOP 100\n    T1._IDRRef,\n    T1._Description\nFROM dbo._Reference85 T1\nWHERE (T1._Fld774 = @P1) -- Неявный отбор по разделителю данных				\n\n-- Получение данных из временной таблицы для результата запроса\nSELECT\n    T1._Q_000_F_000RRef,\n    T1._Q_000_F_001\nFROM #tt36 T1 WITH(NOLOCK)					\n\n-- Очистка временной таблицы\nTRUNCATE TABLE #tt36\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"Платформа увидела, что пустая временная таблица с необходимой структурой уже есть на стороне базы данных для текущего соединения с СУБД и не стала создавать ее заново. Эта оптимизация позволяет работать с временными таблицами наиболее эффективно, не создавая каждый раз их заново."}),(0,s.jsx)(t.xv,{p:!0,children:"Также обратите внимание на проверку существования временной таблицы выше. Ранее редко, но метко, можно было нарваться на ошибку уже существующей временной таблицы с именем “#ttN`. Помню такое еще со времен 8.3.6. Теперь это более редкая проблема и это поведение одна из причин изменения ситуации."}),(0,s.jsx)(t.xv,{p:!0,children:"Итак, создание временных таблиц выполняется довольно просто. Это относится как в части использования конструкции “ПОМЕСТИТЬ” в запросе, так и в части SQL-запросов платформы 1С. Даже переиспользование ранее созданных временных таблиц не усложняет пример. Но все ли так просто на самом деле?"}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Серийное производство"}),(0,s.jsx)(t.xv,{p:!0,children:"Усложним пример и создадим намного больше временных таблиц в запросе. Вот как это выглядит в контексте 1С."}),(0,s.jsx)(x.Z,{code:"\nВЫБРАТЬ ПЕРВЫЕ 100\n	Номенклатура.Ссылка КАК Ссылка,\n	1 КАК ДругоеЗначение\nПОМЕСТИТЬ ВТ_Номенклатура_1\nИЗ\n	Справочник.Номенклатура КАК Номенклатура\n\nИНДЕКСИРОВАТЬ ПО\n	Ссылка\n;\n\n////////////////////////////////////////////////////////////////////////////////\nВЫБРАТЬ ПЕРВЫЕ 100\n	Номенклатура.Ссылка КАК Ссылка,\n	1 КАК ДругоеЗначение\nПОМЕСТИТЬ ВТ_Номенклатура_2\nИЗ\n	Справочник.Номенклатура КАК Номенклатура\n\nИНДЕКСИРОВАТЬ ПО\n	Ссылка\n;\n\n////////////////////////////////////////////////////////////////////////////////\nВЫБРАТЬ ПЕРВЫЕ 100\n	Номенклатура.Ссылка КАК Ссылка,\n	1 КАК ДругоеЗначение\nПОМЕСТИТЬ ВТ_Номенклатура_3\nИЗ\n	Справочник.Номенклатура КАК Номенклатура\n\nИНДЕКСИРОВАТЬ ПО\n	Ссылка\n;\n\n////////////////////////////////////////////////////////////////////////////////\nВЫБРАТЬ\n	ВТ_Номенклатура_1.Ссылка КАК Ссылка1,\n	ВТ_Номенклатура_2.Ссылка КАК Ссылка2,\n	ВТ_Номенклатура_3.Ссылка КАК Ссылка3,\n	2 КАК ДругоеЗначение\nПОМЕСТИТЬ ВТ_Результат\nИЗ\n	ВТ_Номенклатура_1 КАК ВТ_Номенклатура_1\n		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура_2 КАК ВТ_Номенклатура_2\n			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура_3 КАК ВТ_Номенклатура_3\n			ПО ВТ_Номенклатура_2.Ссылка = ВТ_Номенклатура_3.Ссылка\n		ПО ВТ_Номенклатура_1.Ссылка = ВТ_Номенклатура_2.Ссылка\n;\n\n////////////////////////////////////////////////////////////////////////////////\nУНИЧТОЖИТЬ ВТ_Номенклатура_1\n;\n\n////////////////////////////////////////////////////////////////////////////////\nУНИЧТОЖИТЬ ВТ_Номенклатура_2\n;\n\n////////////////////////////////////////////////////////////////////////////////\nУНИЧТОЖИТЬ ВТ_Номенклатура_3\n;\n\n////////////////////////////////////////////////////////////////////////////////\nВЫБРАТЬ\n	ВТ_Результат.Ссылка1 КАК Ссылка1,\n	ВТ_Результат.Ссылка2 КАК Ссылка2,\n	ВТ_Результат.Ссылка3 КАК Ссылка3\nИЗ\n	ВТ_Результат КАК ВТ_Результат\n                ",className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Длинный запрос. В этом примере мы создали 3 временных таблицы, соединили их и результат поместили в четвертую, а после удалили часть временных таблиц и вернули результат. При этом для первых трех таблиц мы добавили индексы. Вот что мы увидим на стороне SQL Server."}),(0,s.jsx)(x.Z,{code:'\n-- Проверка существует ли временная таблица с указанным именем\nSELECT 1 WHERE OBJECT_ID(\'tempdb..#tt41\') IS NOT NULL					\n\n-- Создание временной таблицы "ВТ_Номенклатура_1" с зарезервированным именем и необходимой структурой\nCREATE TABLE #tt41 (_Q_000_F_000RRef BINARY(16), _Q_000_F_001 NUMERIC(1, 0))					\n\n-- Создание кластерного индекса для временной таблицы "ВТ_Номенклатура_1" по полю "Ссылка"\nCREATE CLUSTERED INDEX idx41 ON #tt41 (_Q_000_F_000RRef)					\n\n-- Выполнение 1 пакета запроса для заполнения временной таблицы "ВТ_Номенклатура_1"\nINSERT INTO #tt41 WITH(TABLOCK) (_Q_000_F_000RRef, _Q_000_F_001) \nSELECT TOP 100\n    T1._IDRRef,\n    @P1\nFROM dbo._Reference85 T1\nWHERE (T1._Fld774 = @P2)				\n\n-- Проверка существует ли временная таблица с указанным именем\nSELECT 1 WHERE OBJECT_ID(\'tempdb..#tt42\') IS NOT NULL					\n\n-- Создание временной таблицы "ВТ_Номенклатура_2" с зарезервированным именем и необходимой структурой\nCREATE TABLE #tt42 (_Q_001_F_000RRef BINARY(16), _Q_001_F_001 NUMERIC(1, 0))					\n\n-- Создание кластерного индекса для временной таблицы "ВТ_Номенклатура_2" по полю "Ссылка"\nCREATE CLUSTERED INDEX idx42 ON #tt42 (_Q_001_F_000RRef)					\n\n-- Выполнение 2 пакета запроса для заполнения временной таблицы "ВТ_Номенклатура_2"\nINSERT INTO #tt42 WITH(TABLOCK) (_Q_001_F_000RRef, _Q_001_F_001) \nSELECT TOP 100\n    T1._IDRRef,\n    @P1\nFROM dbo._Reference85 T1\nWHERE (T1._Fld774 = @P2)				\n\n-- Проверка существует ли временная таблица с указанным именем\nSELECT 1 WHERE OBJECT_ID(\'tempdb..#tt43\') IS NOT NULL					\n\n-- Создание временной таблицы "ВТ_Номенклатура_3" с зарезервированным именем и необходимой структурой\nCREATE TABLE #tt43 (_Q_001_F_000RRef BINARY(16), _Q_001_F_001 NUMERIC(1, 0))					\n\n-- Создание кластерного индекса для временной таблицы "ВТ_Номенклатура_3" по полю "Ссылка"\nCREATE CLUSTERED INDEX idx43 ON #tt43 (_Q_001_F_000RRef)					\n\n-- Выполнение 3 пакета запроса для заполнения временной таблицы "ВТ_Номенклатура_3"\nINSERT INTO #tt43 WITH(TABLOCK) (_Q_001_F_000RRef, _Q_001_F_001) \nSELECT TOP 100\n    T1._IDRRef,\n    @P1\nFROM dbo._Reference85 T1\nWHERE (T1._Fld774 = @P2)				\n\n-- Проверка существует ли временная таблица с указанным именем\nSELECT 1 WHERE OBJECT_ID(\'tempdb..#tt44\') IS NOT NULL					\n\n-- Создание временной таблицы "ВТ_Результат" с зарезервированным именем и необходимой структурой\nCREATE TABLE #tt44 (_Q_001_F_000RRef BINARY(16), _Q_001_F_001RRef BINARY(16), _Q_001_F_002RRef BINARY(16), _Q_001_F_003 NUMERIC(1, 0))					\n\n-- Выполнение 4 пакета запроса для заполнения временной таблицы "ВТ_Результат"\nINSERT INTO #tt44 WITH(TABLOCK) (_Q_001_F_000RRef, _Q_001_F_001RRef, _Q_001_F_002RRef, _Q_001_F_003) \nSELECT\n    T1._Q_000_F_000RRef,\n    T2._Q_001_F_000RRef,\n    T3._Q_001_F_000RRef,\n    @P1\nFROM #tt41 T1 WITH(NOLOCK)\n    LEFT OUTER JOIN #tt42 T2 WITH(NOLOCK)\n        LEFT OUTER JOIN #tt43 T3 WITH(NOLOCK)\n    ON (T2._Q_001_F_000RRef = T3._Q_001_F_000RRef)\n        ON (T1._Q_000_F_000RRef = T2._Q_001_F_000RRef)				\n\n-- Очистка временной таблицы "ВТ_Номенклатура_1" c помощью конструкции "УНИЧТОЖИТЬ"\nTRUNCATE TABLE #tt41					\n\n-- Очистка временной таблицы "ВТ_Номенклатура_2" c помощью конструкции "УНИЧТОЖИТЬ"\nTRUNCATE TABLE #tt42					\n\n-- Очистка временной таблицы "ВТ_Номенклатура_3" c помощью конструкции "УНИЧТОЖИТЬ"\nTRUNCATE TABLE #tt43\n\n-- Получение данных из временной таблицы для результата запроса\nSELECT\n    T1._Q_001_F_000RRef,\n    T1._Q_001_F_001RRef,\n    T1._Q_001_F_002RRef\nFROM #tt44 T1 WITH(NOLOCK)					\n\n-- Очистка временной таблицы ВТ_Результат после выполнения запроса\nTRUNCATE TABLE #tt44\n                ',className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"Главным отличием от предыдущего примера является большее количество временных таблиц и манипуляций с ними. При этом принципы работы те же самые. Из нового стоит выделить создание индекса для временных таблиц. Фактически, это всегда кластерный индекс по указанному набору полей. Стоит ли всегда создавать индексы на временную таблицу? Если кратко, то “НЕТ”. Добавлять индексы во временную таблицу нужно только при большом объеме данных и только на те поля, которые используются в соединениях или условиях отборов. И если при подготовке к экзаменам Вам говорят, что для временных таблиц всегда нужно добавлять индексы, то скорее всего это только в контексте экзамена."}),(0,s.jsx)(t.xv,{p:!0,children:"В этом примере мы также рассмотрели как работает конструкции “УНИЧТОЖИТЬ”. Фактически она также очищает существующую временную таблицу как это делает платформа автоматически при завершении запроса. Давайте пройдем дальше."}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Самый лучший менеджер"}),(0,s.jsx)(t.xv,{p:!0,children:"Настало время еще более сложных примеров. Ранее мы создавали 3 временных таблицы в одном пакетном запросе. Платформе 1С также позволяет использовать менеджер временных таблиц, тем самым сохраняя временную таблицу между вызовами запросов. Этот прием часто используется при наличии сложной логики запросов к базе данных. Как же платформа работает с этим механизмом?"}),(0,s.jsx)(x.Z,{code:'\n// Подготовим текст запроса\nТекстЗапроса = \n	"ВЫБРАТЬ ПЕРВЫЕ 1\n	|	Номенклатура.Ссылка КАК Ссылка,\n	|	1 КАК НомерМенеджераВТ,\n	|	""ПРОВЕРКА"" КАК ПроизвольныйТекст,\n	|	""Тест"" КАК ДругоеЗначение\n	|ПОМЕСТИТЬ ВТ_Номенклатура\n	|ИЗ\n	|	Справочник.Номенклатура КАК Номенклатура\n	|\n	|ИНДЕКСИРОВАТЬ ПО\n	|	Ссылка";\n\n// Выполним запрос и поместим результат во временную таблицу.\n// Для сохранения временной таблицы используем менеджер временных таблиц.\nМенеджерВТ = Новый МенеджерВременныхТаблиц;\nЗапрос = Новый Запрос;\nЗапрос.Текст = ТекстЗапроса; \nЗапрос.МенеджерВременныхТаблиц = МенеджерВТ;\nЗапрос.Выполнить();\n\n// Прочитаем данные из временной таблицы в менеджере ВТ\nЗапрос = Новый Запрос;\nЗапрос.Текст = \n	"ВЫБРАТЬ * Из ВТ_Номенклатура КАК Т";\nЗапрос.МенеджерВременныхТаблиц = МенеджерВТ;\nРезультат = Запрос.Выполнить();		\nВыборка = Результат.Выбрать();\nВыборка.Следующий();	\nСообщить(Выборка.НомерМенеджераВТ);\n\n// Очищаем данные менеджера временных таблиц\nМенеджерВТ.Закрыть();\n                ',className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Здесь мы создали менеджер временных таблиц и присвоили его первому объекту запроса. Текст первого запроса написан таким образом, чтобы результат поместить во временную таблицу “ВТ_Номенклатура”. Затем мы создали новый экземпляр запроса и прочитали данные из временной таблицы “ВТ_Номенклатура”, которую сформировали ранее. Обращение к существующей временной таблице как-раз и возможно благодаря менеджеру временных таблиц. В завершении мы очистили все сохраненные данные в контексте менеджера ВТ. На стороне SQL Server это выглядит так."}),(0,s.jsx)(x.Z,{code:"\n-- Проверка существует ли временная таблица с указанным именем\nSELECT 1 WHERE OBJECT_ID('tempdb..#tt50') IS NOT NULL					\n\n-- Создание временной таблицы с зарезервированным именем и необходимой структурой\nCREATE TABLE #tt50 (\n        _Q_000_F_000RRef BINARY(16), \n        _Q_000_F_001 NUMERIC(1, 0), \n        _Q_000_F_002 NVARCHAR(8) COLLATE DATABASE_DEFAULT,\n        _Q_000_F_003 BINARY(1))					\n\n-- Создание кластерного индекса для временной таблицы\nCREATE CLUSTERED INDEX idx50 ON #tt50 (_Q_000_F_000RRef)					\n\n-- Выполнение 1 запроса для заполнения временной таблицы\nINSERT INTO #tt50 WITH(TABLOCK) (_Q_000_F_000RRef, _Q_000_F_001, _Q_000_F_002, _Q_000_F_003) \nSELECT TOP 1\n    T1._IDRRef,\n    @P1,\n    @P2,\n    0x01\nFROM dbo._Reference85 T1\nWHERE (T1._Fld774 = @P3)	\n\n-- Выполнение 2 запроса для чтения данных из временной таблицы\nSELECT\n    T1._Q_000_F_000RRef,\n    T1._Q_000_F_001,\n    T1._Q_000_F_002,\n    T1._Q_000_F_003\nFROM #tt50 T1 WITH(NOLOCK)					\n\n-- Очистка данных в контексте менеджера временных таблиц\nTRUNCATE TABLE #tt50	\n\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"Фактически, если выполнить все запросы без менеджера временных таблиц одним пакетом, то сформированные SQL-запросы будут те же самые."}),(0,s.jsx)(x.Z,{code:'\nТекстЗапроса = \n	"ВЫБРАТЬ ПЕРВЫЕ 1\n	|	Номенклатура.Ссылка КАК Ссылка,\n	|	1 КАК НомерМенеджераВТ,\n	|	""ПРОВЕРКА"" КАК ПроизвольныйТекст,\n	|	""Тест"" КАК ДругоеЗначение\n	|ПОМЕСТИТЬ ВТ_Номенклатура\n	|ИЗ\n	|	Справочник.Номенклатура КАК Номенклатура\n	|\n	|ИНДЕКСИРОВАТЬ ПО\n	|	Ссылка\n	|;\n	|\n	|////////////////////////////////////////////////////////////////////////////////\n	|ВЫБРАТЬ\n	|	ВТ_Номенклатура.Ссылка КАК Ссылка,\n	|	ВТ_Номенклатура.НомерМенеджераВТ КАК НомерМенеджераВТ,\n	|	ВТ_Номенклатура.ПроизвольныйТекст КАК ПроизвольныйТекст,\n	|	ВТ_Номенклатура.ДругоеЗначение КАК ДругоеЗначение\n	|ИЗ\n	|	ВТ_Номенклатура КАК ВТ_Номенклатура";\n\nЗапрос = Новый Запрос;\nЗапрос.Текст = ТекстЗапроса;\nРезультат = Запрос.Выполнить();		\nВыборка = Результат.Выбрать();\nВыборка.Следующий();	\nСообщить(Выборка.НомерМенеджераВТ);\n                ',className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Таким образом, с помощью менеджера временных таблиц можно создать один раз временную таблицу и использовать ее в других запросах многократно. Удобно, эффективно, производительно. В типовых конфигурациях это используется повсеместно. Но есть интересные особенности как платформа 1С работает с временными таблицами при многопользовательской работе."}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Срывая покровы"}),(0,s.jsx)(t.xv,{p:!0,children:"Еще несколько очевидных и не очень особенностей работы с временными таблицами."}),(0,s.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Контекст и контроль доступности"}),(0,s.jsx)(t.xv,{p:!0,children:"Как известно, сервер 1С при работе с СУБД имеет пул соединений. Речь идет именно о пуле соединений с СУБД, а не кластером 1С. У Вас может быть 100 активных сеансов работы с информационной базой и 2 запущенных рабочих процесса (rphost’ы), но при этом соединений со SQL Server может быть 15. На каждый рабочий процесс свой пул соединений. Это все очень условно, но смысл должен быть понятен. То есть количество сеансов НЕ равно количеству соединений с базой данных. Использование пула соединений является очень эффективным и производительным подходом и тут все просто отлично."}),(0,s.jsx)(t.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2020-04/fun-temporary-tables/1. Схема соединений и рабочих процессов.png",alt:"Схема соединений и рабочих процессов",size:m.h2.MEDIUM}),(0,s.jsx)(t.xv,{p:!0,children:"Есть еще один нюанс. Создаваемые платформой 1С временные таблицы являются локальными. То есть они доступны только в рамках одного соединения с СУБД. Есть также и глобальные временные таблицы, но платформа их не использует. Таким образом, создание и использование временной таблицы происходит всегда в рамках одного соединения с СУБД."}),(0,s.jsx)(t.xv,{p:!0,children:"Последнее еще интересней, если рассмотреть это в рамках использования менеджера временных таблиц. Если из кода встроенного языка создать менеджер временных таблиц и выполнять запросы с присвоением этого менеджера ВТ объекту запроса, то можно быть уверенным, что все они будут выполнены в рамках одного соединения с СУБД."}),(0,s.jsx)(t.xv,{p:!0,children:"Тут может показаться, что если в разных сеансах 1С создать менеджер временных таблиц, а в нем сохранить временную таблицу с одним названием, допустим, “ВТ_Номенклатура”, то эта таблица будет доступна в разных сеансах, если они используют одно соединение с СУБД. На самом деле нет, т.к. платформа еще и сама контролирует доступность временных таблиц в разрезе сеансов и доступность в зависимости от контекста."}),(0,s.jsx)(x.Z,{code:'\n// Код сеанса 1\nМенеджерВТ = Новый МенеджерВременныхТаблиц;\nТекстЗапроса =\n	"ВЫБРАТЬ ПЕРВЫЕ 1\n	|	Номенклатура.Ссылка КАК Ссылка,\n	|	1 КАК НомерМенеджераВТ,\n	|	""ПРОВЕРКА"" КАК ПроизвольныйТекст,\n	|	33 КАК ДругоеЗначение\n	|ПОМЕСТИТЬ ВТ_Номенклатура\n	|ИЗ\n	|	Справочник.Номенклатура КАК Номенклатура\n	|\n	|ИНДЕКСИРОВАТЬ ПО\n	|	Ссылка";				\n\nЗапрос = Новый Запрос;\nЗапрос.Текст = ТекстЗапроса;\nЗапрос.МенеджерВременныхТаблиц = МенеджерВТ;\nЗапрос.Выполнить();\n                ',className:"my-5",language:"bsl"}),(0,s.jsx)(x.Z,{code:'\n// Код сеанса 2\nМенеджерВТ = Новый МенеджерВременныхТаблиц;\n				\nЗапрос = Новый Запрос;\nЗапрос.Текст =\n	"ВЫБРАТЬ * Из ВТ_Номенклатура КАК Т";\nЗапрос.МенеджерВременныхТаблиц = МенеджерВТ;\nРезультат = Запрос.Выполнить();\nВыборка = Результат.Выбрать();\nВыборка.Следующий();\nСообщить(Выборка.НомерМенеджераВТ);\n                ',className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Во втором сеансе будет ошибка:"}),(0,s.jsx)(x.Z,{code:'\nТаблица не найдена "ВТ_Номенклатура"\nВЫБРАТЬ * Из <<?>>ВТ_Номенклатура КАК Т\n                ',className:"my-5",language:"text"}),(0,s.jsx)(t.xv,{p:!0,children:"И это логично. Дело даже не в том, что это разные сеансы, а в том что это разные менеджеры временных таблиц. Использовать один менеджер временных таблиц в разных сеансах платформа не позволяет, а контроль доступности осуществляется именно в контексте менеджера ВТ."}),(0,s.jsx)(t.xv,{subtitle:!0,className:"mt-10 md:text",children:"Кэширование"}),(0,s.jsx)(t.xv,{p:!0,children:"Вы когда-нибудь кэшировали менеджер временных таблиц? В некоторых особых случаях Вы могли бы увидеть вот это."}),(0,s.jsx)(t.Ee,{className:"my-4",src:"/public/imp_assets/SQLServer/2020-04/fun-temporary-tables/2. Ошибка менеджера временных таблиц.png",alt:"Ошибка менеджера временных таблиц",size:m.h2.MEDIUM}),(0,s.jsx)(t.xv,{p:!0,children:"Текст ошибки:"}),(0,s.jsx)(x.Z,{code:'\nОшибка конфигурации.\nСоединение с сервером баз данных удерживается после окончания вызова сервера 1С:Предприятия.\nВозможно, не был освобожден менеджер временных таблиц.\nОбъект, удерживающий менеджер временных таблиц, помещен в кэш или образовал цепочку\nциклических ссылок."\n                ',className:"my-5",language:"text"}),(0,s.jsx)(t.xv,{p:!0,children:"Как мы уже говорили выше, для работы менеджера временных таблиц резервируется конкретное соединение с СУБД. Пока менеджер временных таблиц существует, в переменной или в другом кэшированном виде, то для него зарезервировано соединение. Если по каким-либо причинам, например из-за циклических ссылок, платформа не сможет удалить менеджер ВТ и освободить соединение с базой данных, то появится именно такая ошибка. Вы можете воспроизвести ее самостоятельно вот таким образом."}),(0,s.jsx)(x.Z,{code:'\n&НаКлиенте\nПроцедура ОшибкаКэшированияВТ(Команда)\n	\n	ОшибкаКэшированияВТНаСервере();\n	\nКонецПроцедуры\n\n&НаСервере\nПроцедура ОшибкаКэшированияВТНаСервере()\n	\n	// Инициализируем менеджер временных таблиц и выполняем запрос в его контексте\n	МенеджерВТ = Новый МенеджерВременныхТаблиц;\n	ТекстЗапроса = \n		"ВЫБРАТЬ ПЕРВЫЕ 1\n		|	Номенклатура.Ссылка КАК Ссылка,\n		|	1 КАК НомерМенеджераВТ,\n		|	""ПРОВЕРКА"" КАК ПроизвольныйТекст,\n		|	33 КАК ДругоеЗначение\n		|ПОМЕСТИТЬ ВТ_Номенклатура\n		|ИЗ\n		|	Справочник.Номенклатура КАК Номенклатура\n		|\n		|ИНДЕКСИРОВАТЬ ПО\n		|	Ссылка";	\n	Запрос = Новый Запрос;\n	Запрос.Текст = ТекстЗапроса; \n	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;\n	Запрос.Выполнить();\n	\n	// Эмулируем появление циклической ссылки, чтобы после завершения серверного \n	// вызова платформа не смогла удалить менеджер ВТ\n	Кэш1 = Новый Структура;\n	Кэш1.Вставить("МенеджерВТ", МенеджерВТ);\n	Кэш1.Вставить("СсылкаНаДругойКэш", Неопределено);	\n	Кэш2 = Новый Структура;\n	Кэш2.Вставить("МенеджерВТ", МенеджерВТ);\n	Кэш2.Вставить("СсылкаНаДругойКэш", Неопределено);	\n	Кэш1.СсылкаНаДругойКэш = Кэш2;\n	Кэш2.СсылкаНаДругойКэш = Кэш1;\n	\nКонецПроцедуры\n                ',className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Как этого избежать? Нужно следовать простым правилам:"}),(0,s.jsxs)(t.aV,{children:[(0,s.jsx)("li",{children:"НЕ кэшировать менеджер временных таблиц там, где кэш сохраняется между вызовами сервера."}),(0,s.jsx)("li",{children:"Быть осторожным с циклическими ссылками. В принципе, это относится не только к менеджеру ВТ, но и к любой разработке."}),(0,s.jsx)("li",{children:"Вместо кэширования менеджера ВТ подумать над архитектурой. * Возможно кэшируемые в ВТ данные требуют особого хранения в базе для быстрого доступа."})]}),(0,s.jsx)(t.xv,{p:!0,children:"Вот даже с таким можно встретиться."}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Утопи меня в соединениях"}),(0,s.jsx)(t.xv,{p:!0,children:"И еще один эксперимент. Для каждого менеджера ВТ резервируются соединения с СУБД. Это мы уже говорили. Но это не значит, что на каждый созданный менеджер создается соединение с базой данных. Для эксперимента выполните в одном сеансе вот такой код."}),(0,s.jsx)(x.Z,{code:'\nТекстЗапроса =\n	"ВЫБРАТЬ ПЕРВЫЕ 1\n	|	Номенклатура.Ссылка КАК Ссылка,\n	|	1 КАК НомерМенеджераВТ,\n	|	""ПРОВЕРКА"" КАК ПроизвольныйТекст,\n	|	33 КАК ДругоеЗначение\n	|ПОМЕСТИТЬ ВТ_Номенклатура\n	|ИЗ\n	|	Справочник.Номенклатура КАК Номенклатура\n	|\n	|ИНДЕКСИРОВАТЬ ПО\n	|	Ссылка";\n\nКэшМенеджеровВТ = Новый Соответствие;\nДля НомерМенеджера = 1 По 10000 Цикл\n	\n	МенеджерВТ = Новый МенеджерВременныхТаблиц;\n	Запрос = Новый Запрос;\n	Запрос.Текст = СтрЗаменить(ТекстЗапроса,\n			"1 КАК НомерМенеджераВТ",\n			XMLСтрока(НомерМенеджера) + " КАК НомерМенеджераВТ");\n	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;\n	Запрос.Выполнить();\n	\n	КэшМенеджеровВТ.Вставить(НомерМенеджера, МенеджерВТ);\n	\nКонецЦикла;\n                ',className:"my-5",language:"bsl"}),(0,s.jsx)(t.xv,{p:!0,children:"Мы создали 10000 новых временных таблиц и менеджеров ВТ! Вы можете это проверить и на стороне СУБД с помощью скриптов, предложенных в конце статьи. Там же есть и скрипты для просмотра количества соединений с сервером баз данных. При этом новых соединений на каждый менеджер ВТ платформа не создала. Все потому что для обслуживания одного сеанса достаточно одного соединения с базой данных. Возможно, для этого правила есть исключения, но мы их сейчас рассматривать не будем."}),(0,s.jsx)(t.xv,{p:!0,children:"Как сервер 1С заставить создать дополнительные соединения с БД? Откройте 10 сеансов 1С и запустите этот код в каждом сеансе. Барабанная дробь! Сервер 1С увеличит пул соединений с СУБД до 10 сеансов (может и больше, если ранее соединения уже были созданы). При этом стоит заметить, что пул соединений увеличивается не сразу после старта сеанса 1С, а именно во время создания менеджеров временных таблиц в каждом сеансе. Главное запустить этот код параллельно."}),(0,s.jsx)(t.xv,{p:!0,children:"Таким образом, использование временных таблиц и менеджера ВТ может напрямую влиять на размер пула соединений сервера 1С с сервером баз данных."}),(0,s.jsx)(t.xv,{p:!0,children:"Только не устраивайте этот спам временными таблицами на рабочем окружении. Поберегите сервер!"}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Покажи мне свой товар"}),(0,s.jsx)(t.xv,{p:!0,children:"Как мы уже говорили ранее, локальная временная таблица (именно такие используются платформой 1С) на уровне СУБД доступны только тому соединению, в рамках которого она была создана. Мы никак не можем прочитать из одного соединения содержимое таблиц другого соединения. Например, Вы с помощью диагностических запросов нашли, что таблица “#tt555” участвует в подозрительном запросе и захотели посмотреть что в ней находится. Но SQL Server не позволит это сделать. Но, как говорится, если сильно хочется, то можно. И вот как!"}),(0,s.jsx)(t.xv,{p:!0,children:"Для наглядности мы будем немного изменять тексты запросов, которые генерирует платформа. Это только для наглядности. Все что Вы увидите ниже можно применять и на практике. И так, допустим платформа создала временную таблицу и наполнила ее данными во таким способом."}),(0,s.jsx)(x.Z,{code:"\nCREATE TABLE #ttTest (\n    column1 BINARY(16), \n    column2 NVARCHAR(100) COLLATE DATABASE_DEFAULT\n)\n\nINSERT INTO #ttTest WITH(TABLOCK) (column1, column2) \nSELECT\n    0x811FA45D36C581E411E8F9DCD58AB12F AS_IDRRef,\n    'Этот текст должен видеть только администратор!' AS _Description\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"С помощью этого скрипта мы можем узнать где именно эта временная таблица хранится в базе TempDB вплоть до адреса страниц в файле базы данных."}),(0,s.jsx)(x.Z,{code:"\nSELECT\n    T.name,\n    T.[object_id],\n    AU.type_desc,\n    AU.first_page,\n    AU.data_pages,\n    P.[rows]\nFROM tempdb.sys.tables AS T\nJOIN tempdb.sys.partitions AS P\n    ON P.[object_id] = T.[object_id]\nJOIN tempdb.sys.system_internals_allocation_units AS AU\nON  (\n        AU.type_desc = N'IN_ROW_DATA'\n        AND AU.container_id = P.partition_id\n    )\n    OR\n    (\n        AU.type_desc = N'ROW_OVERFLOW_DATA'\n        AND AU.container_id = P.partition_id\n    )\n    OR\n    (\n        AU.type_desc = N'LOB_DATA' \n        AND AU.container_id = P.hobt_id\n    )\nWHERE T.name LIKE N'#ttTest%'; -- Здесь отбор по имени временной таблицы\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"Предположим, что результат мы получили следующий."}),(0,s.jsxs)(l.b,{"aria-label":"Состояние индексов",children:[(0,s.jsxs)(d.J,{children:[(0,s.jsx)(c.j,{children:"Имя временной таблицы"},"c1"),(0,s.jsx)(c.j,{children:"Идентификатор объекта"},"c2"),(0,s.jsx)(c.j,{children:"Тип данных"},"c3"),(0,s.jsx)(c.j,{children:"Адрес первой страницы"},"c4"),(0,s.jsx)(c.j,{children:"Количество страниц с данными"},"c5"),(0,s.jsx)(c.j,{children:"Количество записей в таблице"},"c6")]}),(0,s.jsx)(i.y,{children:(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"#ttTest______00000000EAFD"}),(0,s.jsx)(r.X,{children:"-1137577394"}),(0,s.jsx)(r.X,{children:"IN_ROW_DATA"}),(0,s.jsx)(r.X,{children:"0x481E01000800"}),(0,s.jsx)(r.X,{children:"1"}),(0,s.jsx)(r.X,{children:"1"})]},"1")})]}),(0,s.jsxs)(t.xv,{p:!0,children:["Очень интересно ",":)"," Но что же это значит? Расшифруем."]}),(0,s.jsxs)(t.aV,{type:m.RH.number,children:[(0,s.jsx)("li",{children:"Имя временной таблицы (name) - это полное имя временной таблицы с учетом идентификатора соединения с базой данных. Именно благодаря такому формированию имени можно создавать временные таблицы с одинаковым именем в разных сессиях, т.к. по факту имена у них все же будут отличаться. Хоть последнее и не будет заметно при их использовании."}),(0,s.jsx)("li",{children:"Идентификатор объекта (object_id) - идентификатор объекта временной таблицы."}),(0,s.jsx)("li",{children:"Тип данных (type_desc) - какие данные хранятся в этом объекте. В нашем случае это таблица с записями."}),(0,s.jsxs)("li",{children:["Адрес первой страницы (first_page) - адрес первой страницы. Это важная часть нашего эксперимента. В нашем случае это значение “0x481E01000800”. Сохранен в виде 6 байтового значения, где каждый байт представлен двумя шестнадцатеричными символами. Для расшифровки нужно читать его справа на лево. Если его расшифровать, то получим следующее (для конвертации hex в число можно использовать этот сервис):",(0,s.jsxs)(t.aV,{children:[(0,s.jsx)("li",{children:"00 08 - это идентификатор файла базы данных TempDB, где эта таблица сохранения. В нашем случае это 8."}),(0,s.jsx)("li",{children:"00 01 1E 48 - это идентификатор начальной страницы. В нашем случае это 73288."})]})]}),(0,s.jsx)("li",{children:"Количество страниц с данными (data_pages) - сколько страниц по 8 КБ занимает таблица."}),(0,s.jsx)("li",{children:"Количество записей в таблице (rows) - сколько записей во временной таблице."})]}),(0,s.jsx)(t.xv,{p:!0,children:"Это все данные что нам нужны для получения содержимого таблицы из другой сессии. Теперь выполним следующий скрипт, подставив найденные параметры."}),(0,s.jsx)(x.Z,{code:"\nDBCC TRACEON (3604); -- Вывод сообщений\n\n-- Служебная процедура для работы со страницами\n-- https://www.mssqltips.com/sqlservertip/1578/using-dbcc-page-to-examine-sql-server-table-and-index-data/\nDBCC PAGE (\n    tempdb, -- база данных\n    8, -- Идентификатор файла\n    73288, -- Идентификатор начальной страницы\n    3) -- Как отобразить результат\nWITH TABLERESULTS; -- Возвращаем результат в таблицу\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"В ответ мы получили большое количество записей. Вот последние 8. Остальные записи вида “BUFFER:” и “PAGE HEADER:” нас не интересуют, сразу перейдем к данным."}),(0,s.jsxs)(l.b,{"aria-label":"Внутренние данные временной таблицы",children:[(0,s.jsxs)(d.J,{children:[(0,s.jsx)(c.j,{children:"ParentObject"},"c1"),(0,s.jsx)(c.j,{children:"Object"},"c2"),(0,s.jsx)(c.j,{children:"Field"},"c3"),(0,s.jsx)(c.j,{children:"VALUE"},"c4")]}),(0,s.jsxs)(i.y,{children:[(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"Memory Dump @0x0000003EC487A060"}),(0,s.jsx)(r.X,{children:" "}),(0,s.jsx)(r.X,{children:"0000000000000000: 30001400 811fa45d 36c581e4 11e8f9dc d58ab12f 0…\x81.\xa4]6\xc5\x81\xe4.\xe8\xf9\xdc\xd5Š\xb1/"})]},"1"),(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"Memory Dump @0x0000003EC487A060"}),(0,s.jsx)(r.X,{children:" "}),(0,s.jsx)(r.X,{children:"0000000000000014: 02000001 0077002d 0442043e 04420420 00420435 …..w.-.B.>.B. .B.5"})]},"2"),(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"Memory Dump @0x0000003EC487A060"}),(0,s.jsx)(r.X,{children:" "}),(0,s.jsx)(r.X,{children:"0000000000000028: 043a0441 04420420 0034043e 043b0436 0435043d .:.A.B. .4.>.;.6.5.="})]},"3"),(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"Memory Dump @0x0000003EC487A060"}),(0,s.jsx)(r.X,{children:" "}),(0,s.jsx)(r.X,{children:"000000000000003C: 04200032 04380434 04350442 044c0420 0042043e . .2.8.4.5.B.L. .B.>"})]},"4"),(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"Memory Dump @0x0000003EC487A060"}),(0,s.jsx)(r.X,{children:" "}),(0,s.jsx)(r.X,{children:"0000000000000050: 043b044c 043a043e 04200030 0434043c 0438043d .;.L.:.>. .0.4.<.8.="})]},"5"),(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"Memory Dump @0x0000003EC487A060"}),(0,s.jsx)(r.X,{children:" "}),(0,s.jsx)(r.X,{children:"0000000000000064: 04380441 04420440 04300442 043e0440 042100 .8.A.B.@.0.B.>.@.!."})]},"6"),(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"column1 = [Binary data] Slot 0 Column 1 Offset 0x4 Length 16 Length (physical) 16"}),(0,s.jsx)(r.X,{children:" "}),(0,s.jsx)(r.X,{children:"0000003EC487A064: 811fa45d 36c581e4 11e8f9dc d58ab12f \x81.\xa4]6\xc5\x81\xe4.\xe8\xf9\xdc\xd5Š\xb1/"})]},"7"),(0,s.jsxs)(a.g,{children:[(0,s.jsx)(r.X,{children:"Slot 0 Offset 0x60 Length 119"}),(0,s.jsx)(r.X,{children:"Slot 0 Column 2 Offset 0x1b Length 92 Length (physical) 92"}),(0,s.jsx)(r.X,{children:"column2"}),(0,s.jsx)(r.X,{children:"Этот текст должен видеть только администратор!"})]},"8")]})]}),(0,s.jsx)(t.xv,{p:!0,children:"В предпоследней строке с описанием “column1 = [Binary data] Slot 0 Column 1 Offset 0x4 Length 16 Length (physical) 16” содержится значение идентификатора в первой колонке “811fa45d 36c581e4 11e8f9dc d58ab12f”. В последней строке с описанием “Slot 0 Column 2 Offset 0x1b Length 92 Length (physical) 92” содержится значение второй колонки “Этот текст должен видеть только администратор!”."}),(0,s.jsx)(t.xv,{p:!0,children:"Дело сделано! Мы прочитали содержимое временной таблицы другой сессии. Да, это не очень удобно в таком виде получать содержимое таблицы с большим количеством записей. Но здесь был продемонстрирован принцип, а инструменты для удобства можно создавать отдельно. Также есть и еще одно важное ограничение: использовать служебную процедуру “PAGE” можно только с правами “sysadmin”. Это стоит учитывать в работе. То есть этот способ доступен только для администратора или разработчика с соответствующими правами."}),(0,s.jsxs)(t.xv,{p:!0,children:["А Вам слабо? ",":)"]}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"И немного диагностики"}),(0,s.jsx)(t.xv,{p:!0,children:"Выше не раз упоминались некоторые скрипты, которые использовались для получения данных о временных таблицах. Продублируем их здесь для удобства."}),(0,s.jsx)(x.Z,{code:"\n-- Список всех временных таблиц\nSELECT\n	[name] AS [TableName],\n	[object_id] AS [ObjectId],\n	[schema_id] AS [SchemaId],\n	[parent_object_id] AS [ParentObjectId],\n	[type] AS [TableType],\n	[create_date] AS [Created],\n	[modify_date] AS [Modified],\n	[is_published] AS [IsPublished],\n	[is_schema_published] AS [IsSchemaPublished]\nFROM tempdb.sys.objects\nWHERE [is_ms_shipped] = 0\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(x.Z,{code:"\n-- Все соединения СУБД\nDECLARE @AllConnections TABLE(\n    SPID INT,\n    Status VARCHAR(MAX),\n    LOGIN VARCHAR(MAX),\n    HostName VARCHAR(MAX),\n    BlkBy VARCHAR(MAX),\n    DBName VARCHAR(MAX),\n    Command VARCHAR(MAX),\n    CPUTime INT,\n    DiskIO INT,\n    LastBatch VARCHAR(MAX),\n    ProgramName VARCHAR(MAX),\n    SPID_1 INT,\n    REQUESTID INT\n)\n\nINSERT INTO @AllConnections EXEC sp_who2\n\nSELECT * FROM @AllConnections\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(x.Z,{code:"\n-- Информация о хранении временных таблиц\nSELECT\n    T.name,\n    T.[object_id],\n    AU.type_desc,\n    AU.first_page,\n    AU.data_pages,\n    P.[rows]\nFROM tempdb.sys.tables AS T\nJOIN tempdb.sys.partitions AS P\n    ON P.[object_id] = T.[object_id]\nJOIN tempdb.sys.system_internals_allocation_units AS AU\nON  (\n        AU.type_desc = N'IN_ROW_DATA'\n        AND AU.container_id = P.partition_id\n    )\n    OR\n    (\n        AU.type_desc = N'ROW_OVERFLOW_DATA'\n        AND AU.container_id = P.partition_id\n    )\n    OR\n    (\n        AU.type_desc = N'LOB_DATA' \n        AND AU.container_id = P.hobt_id\n    )\nWHERE T.name LIKE N'#ttTest%'; -- Здесь отбор по имени временной таблицы\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(x.Z,{code:"\n-- Использующие tempdb-сессии\nSELECT\n    st.dbid AS QueryExecutionContextDBID,\n    DB_NAME(st.dbid) AS QueryExecContextDBNAME,\n    st.objectid AS ModuleObjectId,\n    SUBSTRING(st.TEXT,\n        dmv_er.statement_start_offset/2 + 1,\n        (CASE WHEN dmv_er.statement_end_offset = -1\n        THEN LEN(CONVERT(NVARCHAR(MAX),st.TEXT)) * 2\n        ELSE dmv_er.statement_end_offset\n        END - dmv_er.statement_start_offset)/2) AS Query_Text,\n    dmv_tsu.session_id ,\n    dmv_tsu.request_id,\n    dmv_tsu.exec_context_id,\n    (dmv_tsu.user_objects_alloc_page_count - dmv_tsu.user_objects_dealloc_page_count) AS OutStanding_user_objects_page_counts,\n    (dmv_tsu.internal_objects_alloc_page_count - dmv_tsu.internal_objects_dealloc_page_count) AS OutStanding_internal_objects_page_counts,\n    dmv_er.start_time,\n    dmv_er.command,\n    dmv_er.open_transaction_count,\n    dmv_er.percent_complete,\n    dmv_er.estimated_completion_time,\n    dmv_er.cpu_time,\n    dmv_er.total_elapsed_time,\n    dmv_er.reads, dmv_er.writes,\n    dmv_er.logical_reads,\n    dmv_er.granted_query_memory,\n    dmv_es.HOST_NAME,\n    dmv_es.login_name,\n    dmv_es.program_name\nFROM sys.dm_db_task_space_usage dmv_tsu\n    INNER JOIN sys.dm_exec_requests dmv_er\n    ON (dmv_tsu.session_id = dmv_er.session_id AND dmv_tsu.request_id = dmv_er.request_id)\n    INNER JOIN sys.dm_exec_sessions dmv_es\n    ON (dmv_tsu.session_id = dmv_es.session_id)\nCROSS APPLY sys.dm_exec_sql_text(dmv_er.sql_handle) st\nWHERE (dmv_tsu.internal_objects_alloc_page_count + dmv_tsu.user_objects_alloc_page_count) > 0\nORDER BY (dmv_tsu.user_objects_alloc_page_count - dmv_tsu.user_objects_dealloc_page_count) + (dmv_tsu.internal_objects_alloc_page_count - dmv_tsu.internal_objects_dealloc_page_count) DESC\n                ",className:"my-5",language:"sql"}),(0,s.jsx)(t.xv,{p:!0,children:"Список не большой, но может пригодиться."}),(0,s.jsx)(t.xv,{title:!0,className:"mt-10 md:text",children:"Будьте здоровы!"}),(0,s.jsx)(t.xv,{p:!0,children:"Временные таблицы - очень интересный объект и то как с ним работает платформа 1С. Конечно, мы не раскрыли тему полностью, но, надеюсь, что-нибудь интересное Вы нашли."}),(0,s.jsx)(t.xv,{p:!0,children:"Спасибо за внимание и будьте здоровы!"})]})},850:function(n,e,_){"use strict";_.d(e,{Z:function(){return r}});var s=_(5893),t=_(7294),l=_(4965),d=_(4275),c=_(7340);function i(){let n=(0,c._)(["\n  text-align: left;\n  overflow: hidden;\n  font-size: 14px;\n  border-radius: 6px;\n  overflow: auto;\n  max-height: 350px;\n\n  & .token-line {\n    line-height: 1.3em;\n    height: 1.3em;\n  }\n"]);return i=function(){return n},n}let a=_(964).ZP.pre(i());var r=n=>{let{code:e,className:c,language:i}=n;return(void 0!==_.g?_.g:window).Prism=l.p1,_(1354),_(9016),_(5266),_(2927),_(1315),_(7874),_(6862),(0,s.jsx)("div",{className:(0,d.GF)("bg-blue-500 md:p-5 p-2",c),children:(0,s.jsx)("div",{className:"shadow-lg",children:(0,s.jsx)(l.y$,{theme:l.np.vsDark,code:e,language:null!=i?i:i="tsx",children:n=>{let{className:e,style:_,tokens:l,getLineProps:d,getTokenProps:c}=n;return(0,s.jsx)(a,{className:e,style:_,children:l.map((n,e)=>(0,t.createElement)("div",{...d({line:n,key:e}),key:Math.random()},n.map((n,e)=>(0,t.createElement)("span",{...c({token:n,key:e}),key:Math.random()}))))})}})})})}},9305:function(n,e,_){"use strict";_.d(e,{Ee:function(){return c},Xg:function(){return l},Y7:function(){return x},aV:function(){return a},e9:function(){return r},o_:function(){return m},ty:function(){return i},xv:function(){return d}});var s=_(5152),t=_.n(s);let l=t()(()=>Promise.all([_.e(4838),_.e(4738),_.e(1664),_.e(7167)]).then(_.bind(_,7167)),{loadableGenerated:{webpack:()=>[7167]}}),d=t()(()=>_.e(9179).then(_.bind(_,9179)),{loadableGenerated:{webpack:()=>[9179]}}),c=t()(()=>_.e(1974).then(_.bind(_,1974)),{loadableGenerated:{webpack:()=>[1974]}}),i=t()(()=>_.e(8547).then(_.bind(_,8547)),{loadableGenerated:{webpack:()=>[8547]}}),a=t()(()=>_.e(6806).then(_.bind(_,6806)),{loadableGenerated:{webpack:()=>[6806]}}),r=t()(()=>Promise.all([_.e(1664),_.e(1465)]).then(_.bind(_,1465)),{loadableGenerated:{webpack:()=>[1465]}});t()(()=>_.e(567).then(_.bind(_,567)),{loadableGenerated:{webpack:()=>[567]}});let x=t()(()=>Promise.all([_.e(2004),_.e(4139)]).then(_.bind(_,4139)),{loadableGenerated:{webpack:()=>[4139]}}),m=t()(()=>Promise.all([_.e(3811),_.e(7472),_.e(584),_.e(7870)]).then(_.bind(_,7870)),{loadableGenerated:{webpack:()=>[7870]}})}},function(n){n.O(0,[1102,3811,433,2888,9774,179],function(){return n(n.s=6783)}),_N_E=n.O()}]);